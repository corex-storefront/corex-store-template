/**
 * Relay v5.0.0
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
!function (e, t) {
  "object" == typeof exports && "object" == typeof module ? module.exports = t(require("relay-runtime"), require("react"), require("@babel/runtime/helpers/interopRequireDefault"), require("fbjs/lib/invariant"), require("fbjs/lib/areEqual"), require("@babel/runtime/helpers/objectSpread"), require("@babel/runtime/helpers/inheritsLoose"), require("@babel/runtime/helpers/defineProperty"), require("@babel/runtime/helpers/objectWithoutPropertiesLoose"), require("@babel/runtime/helpers/assertThisInitialized"), require("@babel/runtime/helpers/extends"), require("fbjs/lib/warning"), require("fbjs/lib/mapObject"), require("fbjs/lib/forEachObject")) : "function" == typeof define && define.amd ? define(["relay-runtime", "react", "@babel/runtime/helpers/interopRequireDefault", "fbjs/lib/invariant", "fbjs/lib/areEqual", "@babel/runtime/helpers/objectSpread", "@babel/runtime/helpers/inheritsLoose", "@babel/runtime/helpers/defineProperty", "@babel/runtime/helpers/objectWithoutPropertiesLoose", "@babel/runtime/helpers/assertThisInitialized", "@babel/runtime/helpers/extends", "fbjs/lib/warning", "fbjs/lib/mapObject", "fbjs/lib/forEachObject"], t) : "object" == typeof exports ? exports.ReactRelay = t(require("relay-runtime"), require("react"), require("@babel/runtime/helpers/interopRequireDefault"), require("fbjs/lib/invariant"), require("fbjs/lib/areEqual"), require("@babel/runtime/helpers/objectSpread"), require("@babel/runtime/helpers/inheritsLoose"), require("@babel/runtime/helpers/defineProperty"), require("@babel/runtime/helpers/objectWithoutPropertiesLoose"), require("@babel/runtime/helpers/assertThisInitialized"), require("@babel/runtime/helpers/extends"), require("fbjs/lib/warning"), require("fbjs/lib/mapObject"), require("fbjs/lib/forEachObject")) : e.ReactRelay = t(e["relay-runtime"], e.react, e["@babel/runtime/helpers/interopRequireDefault"], e["fbjs/lib/invariant"], e["fbjs/lib/areEqual"], e["@babel/runtime/helpers/objectSpread"], e["@babel/runtime/helpers/inheritsLoose"], e["@babel/runtime/helpers/defineProperty"], e["@babel/runtime/helpers/objectWithoutPropertiesLoose"], e["@babel/runtime/helpers/assertThisInitialized"], e["@babel/runtime/helpers/extends"], e["fbjs/lib/warning"], e["fbjs/lib/mapObject"], e["fbjs/lib/forEachObject"]);
}(window, function (e, t, r, n, o, a, i, s, u, l, c, p, f, h) {
  return function (e) {
    var t = {};

    function r(n) {
      if (t[n]) return t[n].exports;
      var o = t[n] = {
        i: n,
        l: !1,
        exports: {}
      };
      return e[n].call(o.exports, o, o.exports, r), o.l = !0, o.exports;
    }

    return r.m = e, r.c = t, r.d = function (e, t, n) {
      r.o(e, t) || Object.defineProperty(e, t, {
        enumerable: !0,
        get: n
      });
    }, r.r = function (e) {
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
        value: "Module"
      }), Object.defineProperty(e, "__esModule", {
        value: !0
      });
    }, r.t = function (e, t) {
      if (1 & t && (e = r(e)), 8 & t) return e;
      if (4 & t && "object" == typeof e && e && e.__esModule) return e;
      var n = Object.create(null);
      if (r.r(n), Object.defineProperty(n, "default", {
        enumerable: !0,
        value: e
      }), 2 & t && "string" != typeof e) for (var o in e) r.d(n, o, function (t) {
        return e[t];
      }.bind(null, o));
      return n;
    }, r.n = function (e) {
      var t = e && e.__esModule ? function () {
        return e.default;
      } : function () {
        return e;
      };
      return r.d(t, "a", t), t;
    }, r.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }, r.p = "", r(r.s = 17);
  }([function (t, r) {
    t.exports = e;
  }, function (e, r) {
    e.exports = t;
  }, function (e, t, r) {
    "use strict";

    var n = r(1),
        o = r(0).__internal.createRelayContext;

    e.exports = o(n);
  }, function (e, t) {
    e.exports = r;
  }, function (e, t) {
    e.exports = n;
  }, function (e, t) {
    e.exports = o;
  }, function (e, t) {
    e.exports = a;
  }, function (e, t) {
    e.exports = i;
  }, function (e, t) {
    e.exports = s;
  }, function (e, t, r) {
    "use strict";

    function n(e) {
      return e.displayName || e.name || "Component";
    }

    e.exports = {
      getComponentName: n,
      getContainerName: function (e) {
        return "Relay(" + n(e) + ")";
      }
    };
  }, function (e, t) {
    e.exports = u;
  }, function (e, t) {
    e.exports = l;
  }, function (e, t, r) {
    "use strict";

    var n = r(3)(r(13)),
        o = r(1),
        a = r(2),
        i = r(19),
        s = r(4),
        u = r(20),
        l = r(21),
        c = r(9),
        p = c.getComponentName,
        f = c.getContainerName,
        h = r(0).getFragment;

    e.exports = function (e, t, r) {
      var c = f(e);
      i(p(e), t);
      var v = r(e, u(t, h));

      function d(e, t) {
        var r = l(a);
        return null == r && s(!1), o.createElement(v, (0, n.default)({}, e, {
          __relayContext: r,
          componentRef: e.componentRef || t
        }));
      }

      return v.displayName = c, d.displayName = c, o.forwardRef(d);
    };
  }, function (e, t) {
    e.exports = c;
  }, function (e, t, r) {
    "use strict";

    var n = r(4),
        o = r(22),
        a = r(23);

    function i(e) {
      return "object" == typeof e && null !== e && !Array.isArray(e) && o(e.environment) && a(e.variables);
    }

    e.exports = {
      assertRelayContext: function (e) {
        return i(e) || n(!1), e;
      },
      isRelayContext: i
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(3)(r(8)),
        o = r(4),
        a = r(0),
        i = a.isRelayModernEnvironment,
        s = a.__internal.fetchQuery,
        u = function () {
      function e(e) {
        (0, n.default)(this, "_selectionReferences", []), (0, n.default)(this, "_callOnDataChangeWhenSet", !1), null != e && (this._cacheSelectionReference = e.cacheSelectionReference, this._selectionReferences = e.selectionReferences);
      }

      var t = e.prototype;
      return t.getSelectionReferences = function () {
        return {
          cacheSelectionReference: this._cacheSelectionReference,
          selectionReferences: this._selectionReferences
        };
      }, t.lookupInStore = function (e, t) {
        return e.check(t.root) ? (this._retainCachedOperation(e, t), e.lookup(t.fragment)) : null;
      }, t.execute = function (e) {
        var t = this,
            r = e.environment,
            n = e.operation,
            o = e.cacheConfig,
            a = e.preservePreviousReferences,
            u = void 0 !== a && a,
            l = r.retain(n.root),
            c = null != o ? {
          networkCacheConfig: o
        } : {},
            p = function () {
          t._selectionReferences = t._selectionReferences.concat(l);
        },
            f = function () {
          u || t.disposeSelectionReferences(), t._selectionReferences = t._selectionReferences.concat(l);
        },
            h = function () {
          t._selectionReferences = t._selectionReferences.concat(l);
        };

        return i(r) ? s(r, n, c).do({
          error: p,
          complete: f,
          unsubscribe: h
        }) : r.execute({
          operation: n,
          cacheConfig: o
        }).do({
          error: p,
          complete: f,
          unsubscribe: h
        });
      }, t.setOnDataChange = function (e) {
        this._fetchOptions || o(!1), "function" == typeof e && (this._fetchOptions.onDataChangeCallbacks = this._fetchOptions.onDataChangeCallbacks || [], this._fetchOptions.onDataChangeCallbacks.push(e), this._callOnDataChangeWhenSet && (null != this._error ? e({
          error: this._error
        }) : null != this._snapshot && e({
          snapshot: this._snapshot
        })));
      }, t.fetch = function (e, t) {
        var r,
            n,
            o = this,
            a = e.cacheConfig,
            i = e.environment,
            s = e.operation,
            u = e.onDataChange,
            l = !1;
        this.disposeRequest();
        var c = this._fetchOptions && this._fetchOptions.onDataChangeCallbacks;
        this._fetchOptions = {
          cacheConfig: a,
          environment: i,
          onDataChangeCallbacks: c || [],
          operation: s
        }, u && -1 === this._fetchOptions.onDataChangeCallbacks.indexOf(u) && this._fetchOptions.onDataChangeCallbacks.push(u);
        var p = this.execute({
          environment: i,
          operation: s,
          cacheConfig: null !== (r = t) && void 0 !== r ? r : a
        }).finally(function () {
          o._pendingRequest = null;
        }).subscribe({
          next: function () {
            o._callOnDataChangeWhenSet = !0, o._error = null, o._onQueryDataAvailable({
              notifyFirstResult: l
            });
          },
          error: function (e) {
            o._callOnDataChangeWhenSet = !0, o._error = e, o._snapshot = null;
            var t = o._fetchOptions && o._fetchOptions.onDataChangeCallbacks;
            l ? t && t.forEach(function (t) {
              t({
                error: e
              });
            }) : n = e;
          }
        });
        if (this._pendingRequest = {
          dispose: function () {
            p.unsubscribe();
          }
        }, l = !0, n) throw n;
        return this._snapshot;
      }, t.retry = function (e) {
        return this._fetchOptions || o(!1), this.fetch({
          cacheConfig: this._fetchOptions.cacheConfig,
          environment: this._fetchOptions.environment,
          operation: this._fetchOptions.operation,
          onDataChange: null
        }, e);
      }, t.dispose = function () {
        this.disposeRequest(), this.disposeSelectionReferences();
      }, t.disposeRequest = function () {
        this._error = null, this._snapshot = null, this._pendingRequest && this._pendingRequest.dispose(), this._rootSubscription && (this._rootSubscription.dispose(), this._rootSubscription = null);
      }, t._retainCachedOperation = function (e, t) {
        this._disposeCacheSelectionReference(), this._cacheSelectionReference = e.retain(t.root);
      }, t._disposeCacheSelectionReference = function () {
        this._cacheSelectionReference && this._cacheSelectionReference.dispose(), this._cacheSelectionReference = null;
      }, t.disposeSelectionReferences = function () {
        this._disposeCacheSelectionReference(), this._selectionReferences.forEach(function (e) {
          return e.dispose();
        }), this._selectionReferences = [];
      }, t._onQueryDataAvailable = function (e) {
        var t = this,
            r = e.notifyFirstResult;
        this._fetchOptions || o(!1);
        var n = this._fetchOptions,
            a = n.environment,
            i = n.onDataChangeCallbacks,
            s = n.operation;

        if (!this._snapshot && (this._snapshot = a.lookup(s.fragment), this._rootSubscription = a.subscribe(this._snapshot, function (e) {
          if (null != t._fetchOptions) {
            var r = t._fetchOptions.onDataChangeCallbacks;
            Array.isArray(r) && r.forEach(function (t) {
              return t({
                snapshot: e
              });
            });
          }
        }), this._snapshot && r && Array.isArray(i))) {
          var u = this._snapshot;
          i.forEach(function (e) {
            return e({
              snapshot: u
            });
          });
        }
      }, e;
    }();

    e.exports = u;
  }, function (e, t) {
    e.exports = p;
  }, function (e, t, r) {
    "use strict";

    var n = r(2),
        o = r(18),
        a = r(24),
        i = r(25),
        s = r(27),
        u = r(28),
        l = r(0),
        c = r(29);
    e.exports = {
      QueryRenderer: s,
      LocalQueryRenderer: a,
      MutationTypes: l.MutationTypes,
      RangeOperations: l.RangeOperations,
      ReactRelayContext: n,
      applyOptimisticMutation: l.applyOptimisticMutation,
      commitLocalUpdate: l.commitLocalUpdate,
      commitMutation: l.commitMutation,
      createFragmentContainer: o.createContainer,
      createPaginationContainer: i.createContainer,
      createRefetchContainer: u.createContainer,
      fetchQuery: l.fetchQuery,
      graphql: l.graphql,
      requestSubscription: l.requestSubscription,
      readInlineData_EXPERIMENTAL: c
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(3),
        o = n(r(6)),
        a = n(r(10)),
        i = n(r(11)),
        s = n(r(7)),
        u = n(r(8)),
        l = r(1),
        c = r(5),
        p = r(12),
        f = r(9).getContainerName,
        h = r(14).assertRelayContext,
        v = r(0),
        d = v.createFragmentSpecResolver,
        b = v.getDataIDsFromObject,
        _ = v.isScalarAndEqual;

    function y(e, t) {
      var r,
          n,
          p = f(e);
      return n = r = function (r) {
        function n(e) {
          var n;
          n = r.call(this, e) || this, (0, u.default)((0, i.default)(n), "_handleFragmentDataUpdate", function () {
            var e = n.state.resolver;
            n.setState(function (t) {
              return e === t.resolver ? {
                data: t.resolver.resolve(),
                relayProp: m(t.relayProp.environment)
              } : null;
            });
          });
          var o = h(e.__relayContext),
              a = d(o, p, t, e);
          return n.state = {
            data: a.resolve(),
            prevProps: e,
            prevPropsContext: o,
            relayProp: m(o.environment),
            resolver: a
          }, n;
        }

        (0, s.default)(n, r), n.getDerivedStateFromProps = function (e, r) {
          var n = r.prevProps,
              o = h(e.__relayContext),
              a = b(t, n),
              i = b(t, e),
              s = r.resolver;
          if (r.prevPropsContext.environment !== o.environment || r.prevPropsContext.variables !== o.variables || !c(a, i)) return {
            data: (s = d(o, p, t, e)).resolve(),
            prevPropsContext: o,
            prevProps: e,
            relayProp: m(o.environment),
            resolver: s
          };
          s.setProps(e);
          var u = s.resolve();
          return u !== r.data ? {
            data: u,
            prevProps: e,
            prevPropsContext: o,
            relayProp: m(o.environment)
          } : null;
        };
        var f = n.prototype;
        return f.componentDidMount = function () {
          this._subscribeToNewResolver(), this._rerenderIfStoreHasChanged();
        }, f.componentDidUpdate = function (e, t) {
          this.state.resolver !== t.resolver && (t.resolver.dispose(), this._subscribeToNewResolver()), this._rerenderIfStoreHasChanged();
        }, f.componentWillUnmount = function () {
          this.state.resolver.dispose();
        }, f.shouldComponentUpdate = function (e, r) {
          if (r.data !== this.state.data) return !0;

          for (var n = Object.keys(e), o = 0; o < n.length; o++) {
            var a = n[o];

            if ("__relayContext" === a) {
              if (r.prevPropsContext.environment !== this.state.prevPropsContext.environment || r.prevPropsContext.variables !== this.state.prevPropsContext.variables) return !0;
            } else if (!t.hasOwnProperty(a) && !_(e[a], this.props[a])) return !0;
          }

          return !1;
        }, f._rerenderIfStoreHasChanged = function () {
          var e = this.state,
              t = e.data,
              r = e.resolver.resolve();
          t !== r && this.setState({
            data: r
          });
        }, f._subscribeToNewResolver = function () {
          this.state.resolver.setCallback(this._handleFragmentDataUpdate);
        }, f.render = function () {
          var t = this.props,
              r = t.componentRef,
              n = (t.__relayContext, (0, a.default)(t, ["componentRef", "__relayContext"]));
          return l.createElement(e, (0, o.default)({}, n, this.state.data, {
            ref: r,
            relay: this.state.relayProp
          }));
        }, n;
      }(l.Component), (0, u.default)(r, "displayName", p), n;
    }

    function m(e) {
      return {
        environment: e
      };
    }

    e.exports = {
      createContainer: function (e, t) {
        return p(e, t, y);
      }
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(4);

    e.exports = function (e, t) {
      for (var r in t && "object" == typeof t || n(!1), t) if (t.hasOwnProperty(r)) {
        var o = t[r];
        (!o || "object" != typeof o && "function" != typeof o) && n(!1);
      }
    };
  }, function (e, t) {
    e.exports = f;
  }, function (e, t, r) {
    "use strict";

    var n = r(1).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
        o = n.ReactCurrentDispatcher,
        a = n.ReactCurrentOwner;

    e.exports = function (e) {
      return (null != o ? o.current : a.currentDispatcher).readContext(e);
    };
  }, function (e, t, r) {
    "use strict";

    e.exports = function (e) {
      return "object" == typeof e && null !== e && "function" == typeof e.check && "function" == typeof e.lookup && "function" == typeof e.retain && "function" == typeof e.sendQuery && "function" == typeof e.execute && "function" == typeof e.subscribe;
    };
  }, function (e, t, r) {
    "use strict";

    e.exports = function (e) {
      return "object" == typeof e && null !== e && !Array.isArray(e);
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(1),
        o = r(2),
        a = n.useLayoutEffect,
        i = n.useState,
        s = n.useRef,
        u = n.useMemo,
        l = r(0),
        c = l.createOperationDescriptor,
        p = (l.deepFreeze, l.getRequest),
        f = r(5);

    e.exports = function (e) {
      var t,
          r,
          l = e.environment,
          h = e.query,
          v = e.variables,
          d = e.render,
          b = (t = v, r = n.useRef(t), f(r.current, t) || (r.current = t), r.current),
          _ = u(function () {
        var e = p(h);
        return c(e, b);
      }, [h, b]),
          y = u(function () {
        return {
          environment: l,
          variables: {}
        };
      }, [l]),
          m = s(null),
          C = i(null)[1],
          g = s(null),
          x = u(function () {
        l.check(_.root);
        var e = l.lookup(_.fragment);
        m.current = e.data;
        var t = l.retain(_.root),
            r = l.subscribe(e, function (e) {
          m.current = e.data, C(m.current);
        }),
            n = !1;
        return g.current && g.current(), g.current = function () {
          n || (n = !0, g.current = null, t.dispose(), r.dispose());
        }, e;
      }, [l, _]);

      return a(function () {
        var e = g.current;
        return function () {
          e && e();
        };
      }, [x]), n.createElement(o.Provider, {
        value: y
      }, d({
        props: m.current
      }));
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(3),
        o = n(r(13)),
        a = n(r(10)),
        i = n(r(11)),
        s = n(r(7)),
        u = n(r(8)),
        l = n(r(6)),
        c = r(1),
        p = r(2),
        f = r(15),
        h = r(5),
        v = r(12),
        d = r(26),
        b = r(4),
        _ = (r(16), r(9)),
        y = _.getComponentName,
        m = _.getContainerName,
        C = r(14).assertRelayContext,
        g = r(0),
        x = g.ConnectionInterface,
        R = g.Observable,
        q = g.createFragmentSpecResolver,
        P = g.createOperationDescriptor,
        S = g.getDataIDsFromObject,
        F = g.getFragmentOwners,
        O = g.getRequest,
        D = g.getVariablesFromObject,
        j = g.isScalarAndEqual,
        E = "forward";

    function A(e) {
      return "function" == typeof e ? {
        error: e,
        complete: e,
        unsubscribe: function (t) {
          "function" == typeof e && e();
        }
      } : e || {};
    }

    function N(e, t, r) {
      y(e);

      var n,
          v,
          _ = m(e),
          g = function (e) {
        var t = null,
            r = !1;

        for (var n in e) {
          var o = e[n],
              a = o.metadata && o.metadata.connection;
          void 0 !== o.metadata && (r = !0), a && (1 !== a.length && b(!1), t && b(!1), t = (0, l.default)({}, a[0], {
            fragmentName: n
          }));
        }

        return r && null === t && b(!1), t || {};
      }(t),
          N = r.getConnectionFromProps || function (e) {
        var t = e.path;
        return t || b(!1), function (r) {
          for (var n = r[e.fragmentName], o = 0; o < t.length; o++) {
            if (!n || "object" != typeof n) return null;
            n = n[t[o]];
          }

          return n;
        };
      }(g),
          U = r.direction || g.direction;

      U || b(!1);

      var k = r.getFragmentVariables || function (e) {
        var t = e.count;
        return t || b(!1), function (e, r) {
          return (0, l.default)({}, e, (0, u.default)({}, t, r));
        };
      }(g);

      return v = n = function (n) {
        function v(e) {
          var r;
          r = n.call(this, e) || this, (0, u.default)((0, i.default)(r), "_handleFragmentDataUpdate", function () {
            r.setState({
              data: r._resolver.resolve()
            });
          }), (0, u.default)((0, i.default)(r), "_hasMore", function () {
            var e = r._getConnectionData();

            return !!(e && e.hasMore && e.cursor);
          }), (0, u.default)((0, i.default)(r), "_isLoading", function () {
            return !!r._refetchSubscription;
          }), (0, u.default)((0, i.default)(r), "_refetchConnection", function (e, t, n) {
            if (!r._canFetchPage("refetchConnection")) return {
              dispose: function () {}
            };
            r._refetchVariables = n;
            var o = {
              count: e,
              cursor: null,
              totalCount: e
            };
            return {
              dispose: r._fetchPage(o, A(t), {
                force: !0
              }).unsubscribe
            };
          }), (0, u.default)((0, i.default)(r), "_loadMore", function (e, t, n) {
            if (!r._canFetchPage("loadMore")) return {
              dispose: function () {}
            };

            var o = A(t),
                a = r._getConnectionData();

            if (!a) return R.create(function (e) {
              return e.complete();
            }).subscribe(o), null;
            var i = a.edgeCount + e;
            if (n && n.force) return r._refetchConnection(i, t);
            var s = x.get(),
                u = (s.END_CURSOR, s.START_CURSOR, {
              count: e,
              cursor: a.cursor,
              totalCount: i
            });
            return {
              dispose: r._fetchPage(u, o, n).unsubscribe
            };
          });
          var o = C(e.__relayContext);
          return r._isARequestInFlight = !1, r._refetchSubscription = null, r._refetchVariables = null, r._resolver = q(o, _, t, e, r._handleFragmentDataUpdate), r.state = {
            data: r._resolver.resolve(),
            prevContext: o,
            contextForChildren: o,
            relayProp: r._buildRelayProp(o)
          }, r._isUnmounted = !1, r._hasFetched = !1, r;
        }

        (0, s.default)(v, n);
        var y = v.prototype;
        return y.UNSAFE_componentWillReceiveProps = function (e) {
          var r = C(e.__relayContext),
              n = S(t, this.props),
              o = S(t, e);
          r.environment === this.state.prevContext.environment && r.variables === this.state.prevContext.variables && h(n, o) ? this._hasFetched || this._resolver.setProps(e) : (this._cleanup(), this._resolver = q(r, _, t, e, this._handleFragmentDataUpdate), this.setState({
            prevContext: r,
            contextForChildren: r,
            relayProp: this._buildRelayProp(r)
          }));

          var a = this._resolver.resolve();

          a !== this.state.data && this.setState({
            data: a
          });
        }, y.componentWillUnmount = function () {
          this._isUnmounted = !0, this._cleanup();
        }, y.shouldComponentUpdate = function (e, r) {
          if (r.data !== this.state.data || r.relayProp !== this.state.relayProp) return !0;

          for (var n = Object.keys(e), o = 0; o < n.length; o++) {
            var a = n[o];

            if ("__relayContext" === a) {
              if (r.prevContext.environment !== this.state.prevContext.environment || r.prevContext.variables !== this.state.prevContext.variables) return !0;
            } else if (!t.hasOwnProperty(a) && !j(e[a], this.props[a])) return !0;
          }

          return !1;
        }, y._buildRelayProp = function (e) {
          return {
            hasMore: this._hasMore,
            isLoading: this._isLoading,
            loadMore: this._loadMore,
            refetchConnection: this._refetchConnection,
            environment: e.environment
          };
        }, y._getConnectionData = function () {
          var e = this.props,
              t = (e.componentRef, (0, a.default)(e, ["componentRef"])),
              r = (0, l.default)({}, t, this.state.data),
              n = N(r);
          if (null == n) return null;
          var o = x.get(),
              i = o.EDGES,
              s = o.PAGE_INFO,
              u = o.HAS_NEXT_PAGE,
              c = o.HAS_PREV_PAGE,
              p = o.END_CURSOR,
              f = o.START_CURSOR;
          "object" != typeof n && b(!1);
          var h = n[i],
              v = n[s];
          if (null == h || null == v) return null;
          Array.isArray(h) || b(!1), "object" != typeof v && b(!1);

          var d = U === E ? v[u] : v[c],
              _ = U === E ? v[p] : v[f];

          return "boolean" != typeof d || 0 !== h.length && void 0 === _ ? null : {
            cursor: _,
            edgeCount: h.length,
            hasMore: d
          };
        }, y._getQueryFetcher = function () {
          return this._queryFetcher || (this._queryFetcher = new f()), this._queryFetcher;
        }, y._canFetchPage = function (e) {
          return !this._isUnmounted;
        }, y._fetchPage = function (e, n, o) {
          var i,
              s,
              u = this,
              c = C(this.props.__relayContext).environment,
              p = this.props,
              f = (p.componentRef, p.__relayContext, (0, a.default)(p, ["componentRef", "__relayContext"])),
              v = (0, l.default)({}, f, this.state.data),
              _ = F(t, f);

          d(t, function (e, t) {
            var r,
                n,
                o,
                a = _[t],
                s = Array.isArray(a) ? null !== (r = null === (n = a[0]) || void 0 === n ? void 0 : n.variables) && void 0 !== r ? r : {} : null !== (o = null == a ? void 0 : a.variables) && void 0 !== o ? o : {};
            i = (0, l.default)({}, i, s);
          }), s = D(t, f), s = (0, l.default)({}, i, s, this._refetchVariables);
          var y = r.getVariables(v, {
            count: e.count,
            cursor: e.cursor
          }, s);
          ("object" != typeof y || null === y) && b(!1), y = (0, l.default)({}, y, this._refetchVariables), s = (0, l.default)({}, y, s);
          var m = o ? {
            force: !!o.force
          } : void 0;
          null != m && null != (null == o ? void 0 : o.metadata) && (m.metadata = null == o ? void 0 : o.metadata);
          var g = O(r.query),
              x = P(g, y),
              q = null;
          this._refetchSubscription && this._refetchSubscription.unsubscribe(), this._hasFetched = !0;

          var S = function () {
            u._refetchSubscription === q && (u._refetchSubscription = null, u._isARequestInFlight = !1);
          };

          return this._isARequestInFlight = !0, q = this._getQueryFetcher().execute({
            environment: c,
            operation: x,
            cacheConfig: m,
            preservePreviousReferences: !0
          }).mergeMap(function (t) {
            return R.create(function (t) {
              !function (t, r) {
                var n = (0, l.default)({}, u.props.__relayContext.variables, s),
                    o = u._resolver.resolve();

                u._resolver.setVariables(k(s, e.totalCount), x.request.node);

                var a = u._resolver.resolve();

                h(o, a) ? r() : u.setState({
                  data: a,
                  contextForChildren: {
                    environment: u.props.__relayContext.environment,
                    variables: n
                  }
                }, r);
              }(0, function () {
                t.next(), t.complete();
              });
            });
          }).do({
            error: S,
            complete: S,
            unsubscribe: S
          }).subscribe(n || {}), this._refetchSubscription = this._isARequestInFlight ? q : null, q;
        }, y._cleanup = function () {
          this._resolver.dispose(), this._refetchVariables = null, this._hasFetched = !1, this._refetchSubscription && (this._refetchSubscription.unsubscribe(), this._refetchSubscription = null, this._isARequestInFlight = !1), this._queryFetcher && this._queryFetcher.dispose();
        }, y.render = function () {
          var t = this.props,
              r = t.componentRef,
              n = (t.__relayContext, (0, a.default)(t, ["componentRef", "__relayContext"]));
          return c.createElement(p.Provider, {
            value: this.state.contextForChildren
          }, c.createElement(e, (0, o.default)({}, n, this.state.data, {
            ref: r,
            relay: this.state.relayProp
          })));
        }, v;
      }(c.Component), (0, u.default)(n, "displayName", _), v;
    }

    e.exports = {
      createContainer: function (e, t, r) {
        return v(e, t, function (e, t) {
          return N(e, t, r);
        });
      }
    };
  }, function (e, t) {
    e.exports = h;
  }, function (e, t, r) {
    "use strict";

    var n = r(3),
        o = n(r(6)),
        a = n(r(7)),
        i = r(1),
        s = r(2),
        u = r(15),
        l = r(5),
        c = r(0),
        p = c.createOperationDescriptor,
        f = (c.deepFreeze, c.getRequest),
        h = {},
        v = "store-and-network",
        d = function (e) {
      function t(t) {
        var r;
        r = e.call(this, t) || this;
        var n,
            a,
            i = {
          handleDataChange: null,
          handleRetryAfterError: null
        };

        if (t.query) {
          var s = t.query;
          a = y(f(s).params, t.variables), n = h[a] ? h[a].queryFetcher : new u();
        } else n = new u();

        return r.state = (0, o.default)({
          prevPropsEnvironment: t.environment,
          prevPropsVariables: t.variables,
          prevQuery: t.query,
          queryFetcher: n,
          retryCallbacks: i
        }, m(t, n, i, a)), r;
      }

      (0, a.default)(t, e), t.getDerivedStateFromProps = function (e, t) {
        if (t.prevQuery !== e.query || t.prevPropsEnvironment !== e.environment || !l(t.prevPropsVariables, e.variables)) {
          var r,
              n = e.query,
              a = t.queryFetcher.getSelectionReferences();

          if (t.queryFetcher.disposeRequest(), n) {
            var i = y(f(n).params, e.variables);
            r = h[i] ? h[i].queryFetcher : new u(a);
          } else r = new u(a);

          return (0, o.default)({
            prevQuery: e.query,
            prevPropsEnvironment: e.environment,
            prevPropsVariables: e.variables,
            queryFetcher: r
          }, m(e, r, t.retryCallbacks));
        }

        return null;
      };
      var r = t.prototype;
      return r.componentDidMount = function () {
        var e = this,
            t = this.state,
            r = t.retryCallbacks,
            n = t.queryFetcher,
            o = t.requestCacheKey;
        o && delete h[o], r.handleDataChange = function (t) {
          var r = null == t.error ? null : t.error,
              n = null == t.snapshot ? null : t.snapshot;
          e.setState(function (e) {
            var t = e.requestCacheKey;
            return t && delete h[t], n === e.snapshot && r === e.error ? null : {
              renderProps: _(r, n, e.queryFetcher, e.retryCallbacks),
              snapshot: n,
              requestCacheKey: null
            };
          });
        }, r.handleRetryAfterError = function (t) {
          return e.setState(function (e) {
            var t = e.requestCacheKey;
            return t && delete h[t], {
              renderProps: {
                error: null,
                props: null,
                retry: null
              },
              requestCacheKey: null
            };
          });
        }, this.props.query && n.setOnDataChange(r.handleDataChange);
      }, r.componentDidUpdate = function () {
        var e = this.state.requestCacheKey;
        e && (delete h[e], delete this.state.requestCacheKey);
      }, r.componentWillUnmount = function () {
        this.state.queryFetcher.dispose();
      }, r.shouldComponentUpdate = function (e, t) {
        return e.render !== this.props.render || t.renderProps !== this.state.renderProps;
      }, r.render = function () {
        var e = this.state,
            t = e.renderProps,
            r = e.relayContext;
        return i.createElement(s.Provider, {
          value: r
        }, this.props.render(t));
      }, t;
    }(i.Component);

    function b(e, t) {
      return {
        environment: e,
        variables: t
      };
    }

    function _(e, t, r, n) {
      return {
        error: e || null,
        props: t ? t.data : null,
        retry: function (t) {
          var o = r.retry(t);
          o && "function" == typeof n.handleDataChange ? n.handleDataChange({
            snapshot: o
          }) : e && "function" == typeof n.handleRetryAfterError && n.handleRetryAfterError(e);
        }
      };
    }

    function y(e, t) {
      var r = e.id || e.text;
      return JSON.stringify({
        id: String(r),
        variables: t
      });
    }

    function m(e, t, r, n) {
      var o = e.environment,
          a = e.query,
          i = e.variables,
          s = o;
      if (!a) return t.dispose(), {
        error: null,
        relayContext: b(s, i),
        renderProps: {
          error: null,
          props: {},
          retry: null
        },
        requestCacheKey: null
      };
      var u = f(a),
          l = p(u, i),
          c = b(s, l.request.variables);

      if ("string" == typeof n && h[n]) {
        var d = h[n].snapshot;
        return d ? {
          error: null,
          relayContext: c,
          renderProps: _(null, d, t, r),
          snapshot: d,
          requestCacheKey: n
        } : {
          error: null,
          relayContext: c,
          renderProps: {
            error: null,
            props: null,
            retry: null
          },
          snapshot: null,
          requestCacheKey: n
        };
      }

      try {
        var m = e.fetchPolicy === v ? t.lookupInStore(s, l) : null,
            C = t.fetch({
          cacheConfig: e.cacheConfig,
          environment: s,
          onDataChange: r.handleDataChange,
          operation: l
        }) || m;
        return n = n || y(u.params, e.variables), h[n] = {
          queryFetcher: t,
          snapshot: C
        }, C ? {
          error: null,
          relayContext: c,
          renderProps: _(null, C, t, r),
          snapshot: C,
          requestCacheKey: n
        } : {
          error: null,
          relayContext: c,
          renderProps: {
            error: null,
            props: null,
            retry: null
          },
          snapshot: null,
          requestCacheKey: n
        };
      } catch (e) {
        return {
          error: e,
          relayContext: c,
          renderProps: _(e, null, t, r),
          snapshot: null,
          requestCacheKey: n
        };
      }
    }

    e.exports = d;
  }, function (e, t, r) {
    "use strict";

    var n = r(3),
        o = n(r(13)),
        a = n(r(10)),
        i = n(r(6)),
        s = n(r(11)),
        u = n(r(7)),
        l = n(r(8)),
        c = r(1),
        p = r(2),
        f = r(15),
        h = r(5),
        v = r(12),
        d = (r(16), r(9).getContainerName),
        b = r(14).assertRelayContext,
        _ = r(0),
        y = _.Observable,
        m = _.createFragmentSpecResolver,
        C = _.createOperationDescriptor,
        g = _.getDataIDsFromObject,
        x = _.getRequest,
        R = _.getVariablesFromObject,
        q = _.isScalarAndEqual;

    function P(e, t) {
      return {
        environment: e,
        refetch: t
      };
    }

    e.exports = {
      createContainer: function (e, t, r) {
        return v(e, t, function (e, t) {
          return function (e, t, r) {
            var n,
                v,
                _ = d(e);

            return v = n = function (n) {
              function v(e) {
                var o;
                o = n.call(this, e) || this, (0, l.default)((0, s.default)(o), "_handleFragmentDataUpdate", function () {
                  var e = o.state.resolver;
                  o.setState(function (t) {
                    return e === t.resolver ? {
                      data: t.resolver.resolve()
                    } : null;
                  });
                }), (0, l.default)((0, s.default)(o), "_refetch", function (e, t, n, a) {
                  if (o._isUnmounted) return {
                    dispose: function () {}
                  };
                  var s = b(o.props.__relayContext),
                      u = s.environment,
                      l = s.variables,
                      c = "function" == typeof e ? e(o._getFragmentVariables()) : e;
                  c = (0, i.default)({}, l, c);
                  var p = t ? (0, i.default)({}, c, t) : c,
                      f = a ? {
                    force: !!a.force
                  } : void 0;
                  null != f && null != (null == a ? void 0 : a.metadata) && (f.metadata = null == a ? void 0 : a.metadata);

                  var h,
                      v = "function" == typeof n ? {
                    next: n,
                    error: n
                  } : n || {},
                      d = x(r),
                      _ = C(d, c);

                  return o.state.localVariables = c, o._refetchSubscription && o._refetchSubscription.unsubscribe(), "store-or-network" === (null == a ? void 0 : a.fetchPolicy) && null != o._getQueryFetcher().lookupInStore(u, _) ? (o.state.resolver.setVariables(p, _.request.node), o.setState(function (e) {
                    return {
                      data: e.resolver.resolve(),
                      contextForChildren: {
                        environment: o.props.__relayContext.environment,
                        variables: p
                      }
                    };
                  }, function () {
                    v.next && v.next(), v.complete && v.complete();
                  }), {
                    dispose: function () {}
                  }) : (o._getQueryFetcher().execute({
                    environment: u,
                    operation: _,
                    cacheConfig: f,
                    preservePreviousReferences: !0
                  }).mergeMap(function (e) {
                    return o.state.resolver.setVariables(p, _.request.node), y.create(function (e) {
                      return o.setState(function (e) {
                        return {
                          data: e.resolver.resolve(),
                          contextForChildren: {
                            environment: o.props.__relayContext.environment,
                            variables: p
                          }
                        };
                      }, function () {
                        e.next(), e.complete();
                      });
                    });
                  }).finally(function () {
                    o._refetchSubscription === h && (o._refetchSubscription = null);
                  }).subscribe((0, i.default)({}, v, {
                    start: function (e) {
                      o._refetchSubscription = h = e, v.start && v.start(e);
                    }
                  })), {
                    dispose: function () {
                      h && h.unsubscribe();
                    }
                  });
                });
                var a = b(e.__relayContext);
                o._refetchSubscription = null;
                var u = m(a, _, t, e);
                return o.state = {
                  data: u.resolve(),
                  localVariables: null,
                  prevProps: e,
                  prevPropsContext: a,
                  contextForChildren: a,
                  relayProp: P(a.environment, o._refetch),
                  resolver: u
                }, o._isUnmounted = !1, o;
              }

              (0, u.default)(v, n);
              var d = v.prototype;
              return d.componentDidMount = function () {
                this._subscribeToNewResolver();
              }, d.componentDidUpdate = function (e, t) {
                this.state.resolver !== t.resolver && (t.resolver.dispose(), this._queryFetcher && this._queryFetcher.dispose(), this._refetchSubscription && this._refetchSubscription.unsubscribe(), this._subscribeToNewResolver());
              }, v.getDerivedStateFromProps = function (e, r) {
                var n = r.prevProps,
                    o = b(e.__relayContext),
                    a = g(t, n),
                    i = g(t, e),
                    s = r.resolver;
                if (r.prevPropsContext.environment !== o.environment || r.prevPropsContext.variables !== o.variables || !h(a, i)) return {
                  data: (s = m(o, _, t, e)).resolve(),
                  localVariables: null,
                  prevProps: e,
                  prevPropsContext: o,
                  contextForChildren: o,
                  relayProp: P(o.environment, r.relayProp.refetch),
                  resolver: s
                };
                r.localVariables || s.setProps(e);
                var u = s.resolve();
                return u !== r.data ? {
                  data: u,
                  prevProps: e
                } : null;
              }, d.componentWillUnmount = function () {
                this._isUnmounted = !0, this.state.resolver.dispose(), this._queryFetcher && this._queryFetcher.dispose(), this._refetchSubscription && this._refetchSubscription.unsubscribe();
              }, d.shouldComponentUpdate = function (e, r) {
                if (r.data !== this.state.data || r.relayProp !== this.state.relayProp) return !0;

                for (var n = Object.keys(e), o = 0; o < n.length; o++) {
                  var a = n[o];

                  if ("__relayContext" === a) {
                    if (this.state.prevPropsContext.environment !== r.prevPropsContext.environment || this.state.prevPropsContext.variables !== r.prevPropsContext.variables) return !0;
                  } else if (!t.hasOwnProperty(a) && !q(e[a], this.props[a])) return !0;
                }

                return !1;
              }, d._subscribeToNewResolver = function () {
                var e = this.state,
                    t = e.data,
                    r = e.resolver;
                r.setCallback(this._handleFragmentDataUpdate);
                var n = r.resolve();
                t !== n && this.setState({
                  data: n
                });
              }, d._getFragmentVariables = function () {
                return R(t, this.props);
              }, d._getQueryFetcher = function () {
                return this._queryFetcher || (this._queryFetcher = new f()), this._queryFetcher;
              }, d.render = function () {
                var t = this.props,
                    r = t.componentRef,
                    n = (t.__relayContext, (0, a.default)(t, ["componentRef", "__relayContext"])),
                    i = this.state,
                    s = i.relayProp,
                    u = i.contextForChildren;
                return c.createElement(p.Provider, {
                  value: u
                }, c.createElement(e, (0, o.default)({}, n, this.state.data, {
                  ref: r,
                  relay: s
                })));
              }, v;
            }(c.Component), (0, l.default)(n, "displayName", _), v;
          }(e, t, r);
        });
      }
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(4),
        o = r(0),
        a = o.getInlineDataFragment,
        i = o.FRAGMENTS_KEY;

    e.exports = function (e, t) {
      var r,
          o = a(e);
      if (null == t) return t;
      "object" != typeof t && n(!1);
      var s = null === (r = t[i]) || void 0 === r ? void 0 : r[o.name];
      return null == s && n(!1), s;
    };
  }]);
});