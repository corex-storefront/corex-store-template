/**
 * Relay v5.0.0
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
!function (e, t) {
  "object" == typeof exports && "object" == typeof module ? module.exports = t(require("fbjs/lib/invariant"), require("@babel/runtime/helpers/interopRequireDefault"), require("fbjs/lib/warning"), require("@babel/runtime/helpers/objectSpread"), require("@babel/runtime/helpers/toConsumableArray"), require("@babel/runtime/helpers/defineProperty"), require("fbjs/lib/areEqual"), require("fbjs/lib/mapObject"), require("fbjs/lib/sprintf"), require("fbjs/lib/emptyFunction"), require("fbjs/lib/removeFromArray"), require("fbjs/lib/ErrorUtils"), require("fbjs/lib/resolveImmediate")) : "function" == typeof define && define.amd ? define(["fbjs/lib/invariant", "@babel/runtime/helpers/interopRequireDefault", "fbjs/lib/warning", "@babel/runtime/helpers/objectSpread", "@babel/runtime/helpers/toConsumableArray", "@babel/runtime/helpers/defineProperty", "fbjs/lib/areEqual", "fbjs/lib/mapObject", "fbjs/lib/sprintf", "fbjs/lib/emptyFunction", "fbjs/lib/removeFromArray", "fbjs/lib/ErrorUtils", "fbjs/lib/resolveImmediate"], t) : "object" == typeof exports ? exports.RelayRuntime = t(require("fbjs/lib/invariant"), require("@babel/runtime/helpers/interopRequireDefault"), require("fbjs/lib/warning"), require("@babel/runtime/helpers/objectSpread"), require("@babel/runtime/helpers/toConsumableArray"), require("@babel/runtime/helpers/defineProperty"), require("fbjs/lib/areEqual"), require("fbjs/lib/mapObject"), require("fbjs/lib/sprintf"), require("fbjs/lib/emptyFunction"), require("fbjs/lib/removeFromArray"), require("fbjs/lib/ErrorUtils"), require("fbjs/lib/resolveImmediate")) : e.RelayRuntime = t(e["fbjs/lib/invariant"], e["@babel/runtime/helpers/interopRequireDefault"], e["fbjs/lib/warning"], e["@babel/runtime/helpers/objectSpread"], e["@babel/runtime/helpers/toConsumableArray"], e["@babel/runtime/helpers/defineProperty"], e["fbjs/lib/areEqual"], e["fbjs/lib/mapObject"], e["fbjs/lib/sprintf"], e["fbjs/lib/emptyFunction"], e["fbjs/lib/removeFromArray"], e["fbjs/lib/ErrorUtils"], e["fbjs/lib/resolveImmediate"]);
}(window, function (e, t, r, n, i, o, a, s, u, c, l, d, f) {
  return function (e) {
    var t = {};

    function r(n) {
      if (t[n]) return t[n].exports;
      var i = t[n] = {
        i: n,
        l: !1,
        exports: {}
      };
      return e[n].call(i.exports, i, i.exports, r), i.l = !0, i.exports;
    }

    return r.m = e, r.c = t, r.d = function (e, t, n) {
      r.o(e, t) || Object.defineProperty(e, t, {
        enumerable: !0,
        get: n
      });
    }, r.r = function (e) {
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
        value: "Module"
      }), Object.defineProperty(e, "__esModule", {
        value: !0
      });
    }, r.t = function (e, t) {
      if (1 & t && (e = r(e)), 8 & t) return e;
      if (4 & t && "object" == typeof e && e && e.__esModule) return e;
      var n = Object.create(null);
      if (r.r(n), Object.defineProperty(n, "default", {
        enumerable: !0,
        value: e
      }), 2 & t && "string" != typeof e) for (var i in e) r.d(n, i, function (t) {
        return e[t];
      }.bind(null, i));
      return n;
    }, r.n = function (e) {
      var t = e && e.__esModule ? function () {
        return e.default;
      } : function () {
        return e;
      };
      return r.d(t, "a", t), t;
    }, r.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }, r.p = "", r(r.s = 49);
  }([function (t, r) {
    t.exports = e;
  }, function (e, t, r) {
    "use strict";

    var n = r(2)(r(10)),
        i = r(5),
        o = r(23),
        a = r(0),
        s = r(8),
        u = i.VARIABLE,
        c = "__module_component_",
        l = "__module_operation_";

    function d(e, t) {
      var r = {};
      return e.forEach(function (e) {
        e.kind === u ? r[e.name] = function (e, t) {
          return t.hasOwnProperty(e) || a(!1), s(t[e]);
        }(e.variableName, t) : r[e.name] = e.value;
      }), r;
    }

    function f(e, t) {
      if (!t) return e;
      var r = [];

      for (var n in t) if (t.hasOwnProperty(n)) {
        var i = t[n];
        null != i && r.push(n + ":" + JSON.stringify(i));
      }

      return 0 === r.length ? e : e + "(".concat(r.join(","), ")");
    }

    var h = {
      FRAGMENTS_KEY: "__fragments",
      FRAGMENT_OWNER_KEY: "__fragmentOwner",
      FRAGMENT_PROP_NAME_KEY: "__fragmentPropName",
      MODULE_COMPONENT_KEY: "__module_component",
      ID_KEY: "__id",
      REF_KEY: "__ref",
      REFS_KEY: "__refs",
      ROOT_ID: "client:root",
      ROOT_TYPE: "__Root",
      TYPENAME_KEY: "__typename",
      UNPUBLISH_RECORD_SENTINEL: Object.freeze({
        __UNPUBLISH_RECORD_SENTINEL: !0
      }),
      UNPUBLISH_FIELD_SENTINEL: Object.freeze({
        __UNPUBLISH_FIELD_SENTINEL: !0
      }),
      getArgumentValues: d,
      getHandleStorageKey: function (e, t) {
        var r = e.dynamicKey,
            i = e.handle,
            a = e.key,
            s = e.name,
            u = e.args,
            c = e.filters,
            l = o(i, a, s),
            h = null;
        return u && c && 0 !== u.length && 0 !== c.length && (h = u.filter(function (e) {
          return c.indexOf(e.name) > -1;
        })), r && (h = null != h ? [r].concat((0, n.default)(h)) : [r]), null === h ? l : f(l, d(h, t));
      },
      getStorageKey: function (e, t) {
        if (e.storageKey) return e.storageKey;
        var r = e.args,
            n = e.name;
        return r && 0 !== r.length ? f(n, d(r, t)) : n;
      },
      getStableStorageKey: function (e, t) {
        return f(e, s(t));
      },
      getModuleComponentKey: function (e) {
        return "".concat(c).concat(e);
      },
      getModuleOperationKey: function (e) {
        return "".concat(l).concat(e);
      }
    };
    e.exports = h;
  }, function (e, r) {
    e.exports = t;
  }, function (e, t) {
    e.exports = r;
  }, function (e, t) {
    e.exports = n;
  }, function (e, t, r) {
    "use strict";

    e.exports = {
      CONDITION: "Condition",
      CLIENT_EXTENSION: "ClientExtension",
      DEFER: "Defer",
      CONNECTION_FIELD: "ConnectionField",
      FRAGMENT: "Fragment",
      FRAGMENT_SPREAD: "FragmentSpread",
      INLINE_DATA_FRAGMENT_SPREAD: "InlineDataFragmentSpread",
      INLINE_DATA_FRAGMENT: "InlineDataFragment",
      INLINE_FRAGMENT: "InlineFragment",
      LINKED_FIELD: "LinkedField",
      LINKED_HANDLE: "LinkedHandle",
      LITERAL: "Literal",
      LOCAL_ARGUMENT: "LocalArgument",
      MODULE_IMPORT: "ModuleImport",
      OPERATION: "Operation",
      REQUEST: "Request",
      ROOT_ARGUMENT: "RootArgument",
      SCALAR_FIELD: "ScalarField",
      SCALAR_HANDLE: "ScalarHandle",
      SPLIT_OPERATION: "SplitOperation",
      STREAM: "Stream",
      VARIABLE: "Variable"
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(2)(r(4)),
        i = r(18),
        o = r(19),
        a = r(0),
        s = (r(3), r(7).isClientID, r(1)),
        u = s.ID_KEY,
        c = s.REF_KEY,
        l = s.REFS_KEY,
        d = s.TYPENAME_KEY,
        f = s.UNPUBLISH_FIELD_SENTINEL;
    e.exports = {
      clone: function (e) {
        return (0, n.default)({}, e);
      },
      copyFields: function (e, t) {
        for (var r in e) e.hasOwnProperty(r) && r !== u && r !== d && (t[r] = e[r]);
      },
      create: function (e, t) {
        var r = {};
        return r[u] = e, r[d] = t, r;
      },
      freeze: function (e) {
        o(e);
      },
      getDataID: function (e) {
        return e[u];
      },
      getLinkedRecordID: function (e, t) {
        var r = e[t];
        return null == r ? r : ("object" == typeof r && r && "string" == typeof r[c] || a(!1), r[c]);
      },
      getLinkedRecordIDs: function (e, t) {
        var r = e[t];
        return null == r ? r : ("object" == typeof r && Array.isArray(r[l]) || a(!1), r[l]);
      },
      getType: function (e) {
        return e[d];
      },
      getValue: function (e, t) {
        var r = e[t];
        return r && "object" == typeof r && (r.hasOwnProperty(c) || r.hasOwnProperty(l)) && a(!1), r;
      },
      merge: function (e, t) {
        return Object.assign({}, e, t);
      },
      setValue: function (e, t, r) {
        e[t] = r;
      },
      setLinkedRecordID: function (e, t, r) {
        var n = {};
        n[c] = r, e[t] = n;
      },
      setLinkedRecordIDs: function (e, t, r) {
        var n = {};
        n[l] = r, e[t] = n;
      },
      update: function (e, t) {
        for (var r = null, o = Object.keys(t), a = 0; a < o.length; a++) {
          var s = o[a];
          !r && i(e[s], t[s]) || (r = null !== r ? r : (0, n.default)({}, e), t[s] !== f ? r[s] = t[s] : delete r[s]);
        }

        return null !== r ? r : e;
      }
    };
  }, function (e, t, r) {
    "use strict";

    var n = "client:";
    e.exports = {
      generateClientID: function (e, t, r) {
        var i = e + ":" + t;
        return null != r && (i += ":" + r), 0 !== i.indexOf(n) && (i = n + i), i;
      },
      isClientID: function (e) {
        return 0 === e.indexOf(n);
      }
    };
  }, function (e, t, r) {
    "use strict";

    e.exports = function e(t) {
      if (!t || "object" != typeof t) return t;
      if (Array.isArray(t)) return t.map(e);

      for (var r = Object.keys(t).sort(), n = {}, i = 0; i < r.length; i++) n[r[i]] = e(t[r[i]]);

      return n;
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(18),
        i = r(0),
        o = (r(3), r(20).getFragmentVariables),
        a = r(1),
        s = a.FRAGMENT_OWNER_KEY,
        u = a.FRAGMENTS_KEY,
        c = a.ID_KEY;

    function l(e, t) {
      ("object" != typeof t || null === t || Array.isArray(t)) && i(!1);
      var r = t[c],
          n = t[u],
          a = t[s];

      if ("string" == typeof r && "object" == typeof n && null !== n && "object" == typeof n[e.name] && null !== n[e.name] && "object" == typeof a && null !== a) {
        var l = a,
            d = n[e.name];
        return m(e, r, o(e, l.variables, d), l);
      }

      return null;
    }

    function d(e, t) {
      var r = null;
      return t.forEach(function (t, n) {
        var i = null != t ? l(e, t) : null;
        null != i && (r = r || []).push(i);
      }), null == r ? null : {
        kind: "PluralReaderSelector",
        selectors: r
      };
    }

    function f(e, t) {
      return null == t ? t : e.metadata && !0 === e.metadata.plural ? (Array.isArray(t) || i(!1), d(e, t)) : (Array.isArray(t) && i(!1), l(e, t));
    }

    function h(e, t) {
      return null == t ? t : e.metadata && !0 === e.metadata.plural ? (Array.isArray(t) || i(!1), function (e, t) {
        var r = null;
        return t.forEach(function (t) {
          var n = null != t ? p(e, t) : null;
          null != n && (r = r || []).push(n);
        }), r;
      }(e, t)) : (Array.isArray(t) && i(!1), p(e, t));
    }

    function p(e, t) {
      ("object" != typeof t || null === t || Array.isArray(t)) && i(!1);
      var r = t[c];
      return "string" == typeof r ? r : null;
    }

    function _(e, t) {
      var r;
      return null == t ? {} : !0 === (null === (r = e.metadata) || void 0 === r ? void 0 : r.plural) ? (Array.isArray(t) || i(!1), g(e, t)) : (Array.isArray(t) && i(!1), v(e, t) || {});
    }

    function v(e, t) {
      var r = l(e, t);
      return r ? r.variables : null;
    }

    function g(e, t) {
      var r = {};
      return t.forEach(function (t, n) {
        if (null != t) {
          var i = v(e, t);
          null != i && Object.assign(r, i);
        }
      }), r;
    }

    function m(e, t, r, n) {
      return {
        kind: "SingularReaderSelector",
        dataID: t,
        node: e,
        variables: r,
        owner: n
      };
    }

    e.exports = {
      areEqualSelectors: function (e, t) {
        return e.owner === t.owner && e.dataID === t.dataID && e.node === t.node && n(e.variables, t.variables);
      },
      createReaderSelector: m,
      createNormalizationSelector: function (e, t, r) {
        return {
          dataID: t,
          node: e,
          variables: r
        };
      },
      getDataIDsFromFragment: h,
      getDataIDsFromObject: function (e, t) {
        var r = {};

        for (var n in e) if (e.hasOwnProperty(n)) {
          var i = e[n],
              o = t[n];
          r[n] = h(i, o);
        }

        return r;
      },
      getSingularSelector: l,
      getPluralSelector: d,
      getSelector: f,
      getSelectorsFromObject: function (e, t) {
        var r = {};

        for (var n in e) if (e.hasOwnProperty(n)) {
          var i = e[n],
              o = t[n];
          r[n] = f(i, o);
        }

        return r;
      },
      getVariablesFromSingularFragment: v,
      getVariablesFromPluralFragment: g,
      getVariablesFromFragment: _,
      getVariablesFromObject: function (e, t) {
        var r = {};

        for (var n in e) if (e.hasOwnProperty(n)) {
          var i = _(e[n], t[n]);

          Object.assign(r, i);
        }

        return r;
      }
    };
  }, function (e, t) {
    e.exports = i;
  }, function (e, t, r) {
    "use strict";

    var n = r(59),
        i = function (e, t) {},
        o = function () {
      function e(e) {
        this._source = e;
      }

      e.create = function (t) {
        return new e(t);
      }, e.onUnhandledError = function (e) {
        i = e;
      }, e.from = function (e) {
        return a(e) ? s(e) : n(e) ? u(e) : c(e);
      }, e.fromLegacy = function (t) {
        return e.create(function (e) {
          var r = t({
            onNext: e.next,
            onError: e.error,
            onCompleted: e.complete
          });
          return a(r) ? r.subscribe(e) : function () {
            return r.dispose();
          };
        });
      };
      var t = e.prototype;
      return t.catch = function (t) {
        var r = this;
        return e.create(function (e) {
          var n;
          return r.subscribe({
            start: function (e) {
              n = e;
            },
            next: e.next,
            complete: e.complete,
            error: function (r) {
              try {
                t(r).subscribe({
                  start: function (e) {
                    n = e;
                  },
                  next: e.next,
                  complete: e.complete,
                  error: e.error
                });
              } catch (t) {
                e.error(t, !0);
              }
            }
          }), function () {
            return n.unsubscribe();
          };
        });
      }, t.concat = function (t) {
        var r = this;
        return e.create(function (e) {
          var n;
          return r.subscribe({
            start: function (e) {
              n = e;
            },
            next: e.next,
            error: e.error,
            complete: function () {
              n = t.subscribe(e);
            }
          }), function () {
            n && n.unsubscribe();
          };
        });
      }, t.do = function (t) {
        var r = this;
        return e.create(function (e) {
          var n = function (r) {
            return function () {
              try {
                t[r] && t[r].apply(t, arguments);
              } catch (e) {
                i(e, !0);
              }

              e[r] && e[r].apply(e, arguments);
            };
          };

          return r.subscribe({
            start: n("start"),
            next: n("next"),
            error: n("error"),
            complete: n("complete"),
            unsubscribe: n("unsubscribe")
          });
        });
      }, t.finally = function (t) {
        var r = this;
        return e.create(function (e) {
          var n = r.subscribe(e);
          return function () {
            n.unsubscribe(), t();
          };
        });
      }, t.ifEmpty = function (t) {
        var r = this;
        return e.create(function (e) {
          var n = !1,
              i = r.subscribe({
            next: function (t) {
              n = !0, e.next(t);
            },
            error: e.error,
            complete: function () {
              n ? e.complete() : i = t.subscribe(e);
            }
          });
          return function () {
            i.unsubscribe();
          };
        });
      }, t.subscribe = function (e) {
        return function (e, t) {
          var r,
              n = !1,
              o = function (e) {
            return Object.defineProperty(e, "closed", {
              get: function () {
                return n;
              }
            });
          };

          function a() {
            if (r) {
              if (r.unsubscribe) r.unsubscribe();else try {
                r();
              } catch (e) {
                i(e, !0);
              }
              r = void 0;
            }
          }

          var s = o({
            unsubscribe: function () {
              if (!n) {
                n = !0;

                try {
                  t.unsubscribe && t.unsubscribe(s);
                } catch (e) {
                  i(e, !0);
                } finally {
                  a();
                }
              }
            }
          });

          try {
            t.start && t.start(s);
          } catch (e) {
            i(e, !0);
          }

          if (n) return s;
          var u = o({
            next: function (e) {
              if (!n && t.next) try {
                t.next(e);
              } catch (e) {
                i(e, !0);
              }
            },
            error: function (e, r) {
              if (n || !t.error) n = !0, i(e, r || !1), a();else {
                n = !0;

                try {
                  t.error(e);
                } catch (e) {
                  i(e, !0);
                } finally {
                  a();
                }
              }
            },
            complete: function () {
              if (!n) {
                n = !0;

                try {
                  t.complete && t.complete();
                } catch (e) {
                  i(e, !0);
                } finally {
                  a();
                }
              }
            }
          });

          try {
            r = e(u);
          } catch (e) {
            u.error(e, !0);
          }

          0;
          n && a();
          return s;
        }(this._source, e);
      }, t.subscribeLegacy = function (e) {
        return {
          dispose: this.subscribe({
            next: e.onNext,
            error: e.onError,
            complete: e.onCompleted
          }).unsubscribe
        };
      }, t.map = function (t) {
        var r = this;
        return e.create(function (e) {
          var n = r.subscribe({
            complete: e.complete,
            error: e.error,
            next: function (r) {
              try {
                var n = t(r);
                e.next(n);
              } catch (t) {
                e.error(t, !0);
              }
            }
          });
          return function () {
            n.unsubscribe();
          };
        });
      }, t.mergeMap = function (t) {
        var r = this;
        return e.create(function (n) {
          var i = [];

          function o(e) {
            this._sub = e, i.push(e);
          }

          function a() {
            i.splice(i.indexOf(this._sub), 1), 0 === i.length && n.complete();
          }

          return r.subscribe({
            start: o,
            next: function (r) {
              try {
                n.closed || e.from(t(r)).subscribe({
                  start: o,
                  next: n.next,
                  error: n.error,
                  complete: a
                });
              } catch (e) {
                n.error(e, !0);
              }
            },
            error: n.error,
            complete: a
          }), function () {
            i.forEach(function (e) {
              return e.unsubscribe();
            }), i.length = 0;
          };
        });
      }, t.poll = function (t) {
        var r = this;
        return e.create(function (e) {
          var n, i;
          return function o() {
            n = r.subscribe({
              next: e.next,
              error: e.error,
              complete: function () {
                i = setTimeout(o, t);
              }
            });
          }(), function () {
            clearTimeout(i), n.unsubscribe();
          };
        });
      }, t.toPromise = function () {
        var e = this;
        return new Promise(function (t, r) {
          var n;
          e.subscribe({
            start: function (e) {
              n = e;
            },
            next: function (e) {
              t(e), n.unsubscribe();
            },
            error: r,
            complete: t
          });
        });
      }, e;
    }();

    function a(e) {
      return "object" == typeof e && null !== e && "function" == typeof e.subscribe;
    }

    function s(e) {
      return e instanceof o ? e : o.create(function (t) {
        return e.subscribe(t);
      });
    }

    function u(e) {
      return o.create(function (t) {
        e.then(function (e) {
          t.next(e), t.complete();
        }, t.error);
      });
    }

    function c(e) {
      return o.create(function (t) {
        t.next(e), t.complete();
      });
    }

    e.exports = o;
  }, function (e, t, r) {
    "use strict";

    r(19);
    var n = r(62),
        i = r(20).getOperationVariables,
        o = r(9),
        a = o.createNormalizationSelector,
        s = o.createReaderSelector,
        u = r(1).ROOT_ID;

    function c(e, t) {
      return {
        identifier: n(e.params, t),
        node: e,
        variables: t
      };
    }

    e.exports = {
      createOperationDescriptor: function (e, t) {
        var r = e.operation,
            n = i(r, t),
            o = u,
            l = c(e, n);
        return {
          fragment: s(e.fragment, o, n, l),
          request: l,
          root: a(r, o, n)
        };
      },
      createRequestDescriptor: c
    };
  }, function (e, t, r) {
    "use strict";

    e.exports = {
      EXISTENT: "EXISTENT",
      NONEXISTENT: "NONEXISTENT",
      UNKNOWN: "UNKNOWN"
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(25),
        i = r(54),
        o = r(55),
        a = function () {
      function e(t) {
        return e.create(t);
      }

      return e.create = function (e) {
        return new (n.USE_RECORD_SOURCE_MAP_IMPL ? i : o)(e);
      }, e;
    }();

    e.exports = a;
  }, function (e, t, r) {
    "use strict";

    var n = r(5),
        i = r(0);

    function o(e) {
      var t = "function" == typeof e ? e : "function" == typeof e.modern ? e.modern : null;
      if (null === t) return e;
      var r = t();
      return r.default ? r.default : r;
    }

    function a(e) {
      var t = o(e);
      return "object" == typeof t && null !== t && t.kind === n.FRAGMENT;
    }

    function s(e) {
      var t = o(e);
      return "object" == typeof t && null !== t && t.kind === n.REQUEST;
    }

    function u(e) {
      var t = o(e);
      return "object" == typeof t && null !== t && t.kind === n.INLINE_DATA_FRAGMENT;
    }

    function c(e) {
      var t = o(e);
      return a(t) || i(!1), t;
    }

    e.exports = {
      getFragment: c,
      getPaginationFragment: function (e) {
        var t,
            r = c(e),
            n = null === (t = r.metadata) || void 0 === t ? void 0 : t.refetch,
            i = null == n ? void 0 : n.connection;
        return null === n || "object" != typeof n || null === i || "object" != typeof i ? null : r;
      },
      getRefetchableFragment: function (e) {
        var t,
            r = c(e),
            n = null === (t = r.metadata) || void 0 === t ? void 0 : t.refetch;
        return null === n || "object" != typeof n ? null : r;
      },
      getRequest: function (e) {
        var t = o(e);
        return s(t) || i(!1), t;
      },
      getInlineDataFragment: function (e) {
        var t = o(e);
        return u(t) || i(!1), t;
      },
      graphql: function (e) {
        i(!1);
      },
      isFragment: a,
      isRequest: s,
      isInlineDataFragment: u
    };
  }, function (e, t) {
    e.exports = o;
  }, function (e, t, r) {
    "use strict";

    var n = r(21),
        i = (r(3), Object.freeze({
      RANGE_ADD: "RANGE_ADD",
      RANGE_DELETE: "RANGE_DELETE",
      NODE_DELETE: "NODE_DELETE",
      FIELDS_CHANGE: "FIELDS_CHANGE",
      REQUIRED_CHILDREN: "REQUIRED_CHILDREN"
    })),
        o = Object.freeze({
      APPEND: "append",
      IGNORE: "ignore",
      PREPEND: "prepend",
      REFETCH: "refetch",
      REMOVE: "remove"
    });

    function a(e) {
      return e.fragment.selections && e.fragment.selections.length > 0 && "LinkedField" === e.fragment.selections[0].kind ? e.fragment.selections[0].name : null;
    }

    e.exports = {
      MutationTypes: i,
      RangeOperations: o,
      convert: function (e, t, r, i) {
        var o = r ? [r] : [],
            s = i ? [i] : [];
        return e.forEach(function (e) {
          switch (e.type) {
            case "NODE_DELETE":
              var r = function (e, t) {
                var r = e.deletedIDFieldName,
                    n = a(t);
                return n ? function (e, t) {
                  var i = e.getRootField(n);

                  if (i) {
                    var o = i.getValue(r),
                        a = Array.isArray(o) ? o : [o];
                    a.forEach(function (t) {
                      t && "string" == typeof t && e.delete(t);
                    });
                  }
                } : null;
              }(e, t);

              r && (o.push(r), s.push(r));
              break;

            case "RANGE_ADD":
              var i = function (e, t) {
                var r = e.parentID,
                    i = e.connectionInfo,
                    o = e.edgeName;
                if (!r) return null;
                var s = a(t);
                return i && s ? function (e, t) {
                  var a = e.get(r);

                  if (a) {
                    var u = e.getRootField(s);

                    if (u) {
                      var c = u.getLinkedRecord(o),
                          l = !0,
                          d = !1,
                          f = void 0;

                      try {
                        for (var h, p = i[Symbol.iterator](); !(l = (h = p.next()).done); l = !0) {
                          var _ = h.value;

                          if (c) {
                            var v = n.getConnection(a, _.key, _.filters);

                            if (v) {
                              var g = n.buildConnectionEdge(e, v, c);
                              if (g) switch (_.rangeBehavior) {
                                case "append":
                                  n.insertEdgeAfter(v, g);
                                  break;

                                case "ignore":
                                  break;

                                case "prepend":
                                  n.insertEdgeBefore(v, g);
                              }
                            }
                          }
                        }
                      } catch (e) {
                        d = !0, f = e;
                      } finally {
                        try {
                          l || null == p.return || p.return();
                        } finally {
                          if (d) throw f;
                        }
                      }
                    }
                  }
                } : null;
              }(e, t);

              i && (o.push(i), s.push(i));
              break;

            case "RANGE_DELETE":
              var u = function (e, t) {
                var r = e.parentID,
                    i = e.connectionKeys,
                    o = e.pathToConnection,
                    s = e.deletedIDFieldName;
                if (!r) return null;
                var u = a(t);
                return u ? function (e, t) {
                  if (t) {
                    var a = [],
                        c = t[u];

                    if (c && Array.isArray(s)) {
                      var l = !0,
                          d = !1,
                          f = void 0;

                      try {
                        for (var h, p = s[Symbol.iterator](); !(l = (h = p.next()).done); l = !0) {
                          var _ = h.value;
                          c && "object" == typeof c && (c = c[_]);
                        }
                      } catch (e) {
                        d = !0, f = e;
                      } finally {
                        try {
                          l || null == p.return || p.return();
                        } finally {
                          if (d) throw f;
                        }
                      }

                      Array.isArray(c) ? c.forEach(function (e) {
                        e && e.id && "object" == typeof e && "string" == typeof e.id && a.push(e.id);
                      }) : c && c.id && "string" == typeof c.id && a.push(c.id);
                    } else c && "string" == typeof s && "object" == typeof c && ("string" == typeof (c = c[s]) ? a.push(c) : Array.isArray(c) && c.forEach(function (e) {
                      "string" == typeof e && a.push(e);
                    }));

                    !function (e, t, r, i, o) {
                      var a = i.get(e);

                      if (a && !(r.length < 2)) {
                        for (var s = a, u = 1; u < r.length - 1; u++) s && (s = s.getLinkedRecord(r[u]));

                        if (t && s) {
                          var c = !0,
                              l = !1,
                              d = void 0;

                          try {
                            for (var f, h = function () {
                              var e = f.value,
                                  t = n.getConnection(s, e.key, e.filters);
                              t && o.forEach(function (e) {
                                n.deleteNode(t, e);
                              });
                            }, p = t[Symbol.iterator](); !(c = (f = p.next()).done); c = !0) h();
                          } catch (e) {
                            l = !0, d = e;
                          } finally {
                            try {
                              c || null == p.return || p.return();
                            } finally {
                              if (l) throw d;
                            }
                          }
                        }
                      }
                    }(r, i, o, e, a);
                  }
                } : null;
              }(e, t);

              u && (o.push(u), s.push(u));
          }
        }), {
          optimisticUpdater: function (e, t) {
            o.forEach(function (r) {
              r(e, t);
            });
          },
          updater: function (e, t) {
            s.forEach(function (r) {
              r(e, t);
            });
          }
        };
      }
    };
  }, function (e, t) {
    e.exports = a;
  }, function (e, t, r) {
    "use strict";

    e.exports = function e(t) {
      return Object.freeze(t), Object.getOwnPropertyNames(t).forEach(function (r) {
        var n = t[r];
        n && "object" == typeof n && !Object.isFrozen(n) && e(n);
      }), t;
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(2)(r(4)),
        i = r(0);
    e.exports = {
      getFragmentVariables: function (e, t, r) {
        var o;
        return e.argumentDefinitions.forEach(function (e) {
          if (!r.hasOwnProperty(e.name)) switch (o = o || (0, n.default)({}, r), e.kind) {
            case "LocalArgument":
              o[e.name] = e.defaultValue;
              break;

            case "RootArgument":
              if (!t.hasOwnProperty(e.name)) {
                o[e.name] = void 0;
                break;
              }

              o[e.name] = t[e.name];
              break;

            default:
              i(!1);
          }
        }), o || r;
      },
      getOperationVariables: function (e, t) {
        var r = {};
        return e.argumentDefinitions.forEach(function (e) {
          var n = e.defaultValue;
          null != t[e.name] && (n = t[e.name]), r[e.name] = n;
        }), r;
      }
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(22),
        i = r(23),
        o = r(0),
        a = (r(3), r(7).generateClientID),
        s = "connection",
        u = "__connection_next_edge_index";

    function c(e, t, r) {
      if (null == r) return r;
      var i = n.get().EDGES,
          s = t.getValue(u);
      "number" != typeof s && o(!1);
      var c = a(t.getDataID(), i, s),
          l = e.create(c, r.getType());
      return l.copyFieldsFrom(r), t.setValue(s + 1, u), l;
    }

    function l(e, t, r) {
      for (var i = n.get().NODE, o = 0; o < e.length; o++) {
        var a = e[o];

        if (a) {
          var s = a.getLinkedRecord(i),
              u = s && s.getDataID();

          if (u) {
            if (r.has(u)) continue;
            r.add(u);
          }

          t.push(a);
        }
      }
    }

    e.exports = {
      buildConnectionEdge: c,
      createEdge: function (e, t, r, i) {
        var o = n.get().NODE,
            s = a(t.getDataID(), r.getDataID()),
            u = e.get(s);
        return u || (u = e.create(s, i)), u.setLinkedRecord(r, o), u;
      },
      deleteNode: function (e, t) {
        var r = n.get(),
            i = r.EDGES,
            o = r.NODE,
            a = e.getLinkedRecords(i);

        if (a) {
          for (var s, u = 0; u < a.length; u++) {
            var c = a[u],
                l = c && c.getLinkedRecord(o);
            null != l && l.getDataID() === t ? void 0 === s && (s = a.slice(0, u)) : void 0 !== s && s.push(c);
          }

          void 0 !== s && e.setLinkedRecords(s, i);
        }
      },
      getConnection: function (e, t, r) {
        var n = i(s, t, null);
        return e.getLinkedRecord(n, r);
      },
      insertEdgeAfter: function (e, t, r) {
        var i = n.get(),
            o = i.CURSOR,
            a = i.EDGES,
            s = e.getLinkedRecords(a);

        if (s) {
          var u;
          if (null == r) u = s.concat(t);else {
            u = [];

            for (var c = !1, l = 0; l < s.length; l++) {
              var d = s[l];
              u.push(d), null != d && r === d.getValue(o) && (u.push(t), c = !0);
            }

            c || u.push(t);
          }
          e.setLinkedRecords(u, a);
        } else e.setLinkedRecords([t], a);
      },
      insertEdgeBefore: function (e, t, r) {
        var i = n.get(),
            o = i.CURSOR,
            a = i.EDGES,
            s = e.getLinkedRecords(a);

        if (s) {
          var u;
          if (null == r) u = [t].concat(s);else {
            u = [];

            for (var c = !1, l = 0; l < s.length; l++) {
              var d = s[l];
              null != d && r === d.getValue(o) && (u.push(t), c = !0), u.push(d);
            }

            c || u.unshift(t);
          }
          e.setLinkedRecords(u, a);
        } else e.setLinkedRecords([t], a);
      },
      update: function (e, t) {
        var r,
            i = e.get(t.dataID);

        if (i) {
          var o = n.get(),
              s = o.EDGES,
              d = o.END_CURSOR,
              f = o.HAS_NEXT_PAGE,
              h = o.HAS_PREV_PAGE,
              p = o.PAGE_INFO,
              _ = o.PAGE_INFO_TYPE,
              v = o.START_CURSOR,
              g = i.getLinkedRecord(t.fieldKey),
              m = g && g.getLinkedRecord(p);

          if (g) {
            var b = a(i.getDataID(), t.handleKey),
                y = i.getLinkedRecord(t.handleKey),
                E = null !== (r = y) && void 0 !== r ? r : e.get(b),
                D = E && E.getLinkedRecord(p);

            if (E) {
              null == y && i.setLinkedRecord(E, t.handleKey);
              var R = E,
                  I = g.getLinkedRecords(s);
              I && (I = I.map(function (t) {
                return c(e, R, t);
              }));
              var S = R.getLinkedRecords(s),
                  k = R.getLinkedRecord(p);
              R.copyFieldsFrom(g), S && R.setLinkedRecords(S, s), k && R.setLinkedRecord(k, p);
              var O = [],
                  N = t.args;

              if (S && I) {
                if (null != N.after) {
                  if (!D || N.after !== D.getValue(d)) return;
                  var L = new Set();
                  l(S, O, L), l(I, O, L);
                } else if (null != N.before) {
                  if (!D || N.before !== D.getValue(v)) return;
                  var P = new Set();
                  l(I, O, P), l(S, O, P);
                } else O = I;
              } else O = I || S;

              if (null != O && O !== S && R.setLinkedRecords(O, s), D && m) if (null == N.after && null == N.before) D.copyFieldsFrom(m);else if (null != N.before || null == N.after && N.last) {
                D.setValue(!!m.getValue(h), h);
                var T = m.getValue(v);
                "string" == typeof T && D.setValue(T, v);
              } else if (null != N.after || null == N.before && N.first) {
                D.setValue(!!m.getValue(f), f);
                var F = m.getValue(d);
                "string" == typeof F && D.setValue(F, d);
              }
            } else {
              var A = e.create(b, g.getType());
              A.setValue(0, u), A.copyFieldsFrom(g);
              var w = g.getLinkedRecords(s);
              w && (w = w.map(function (t) {
                return c(e, A, t);
              }), A.setLinkedRecords(w, s)), i.setLinkedRecord(A, t.handleKey), (D = e.create(a(A.getDataID(), p), _)).setValue(!1, f), D.setValue(!1, h), D.setValue(null, d), D.setValue(null, v), m && D.copyFieldsFrom(m), A.setLinkedRecord(D, p);
            }
          } else i.setValue(null, t.handleKey);
        }
      }
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(2)(r(16)),
        i = {
      after: !0,
      before: !0,
      find: !0,
      first: !0,
      last: !0,
      surrounds: !0
    },
        o = {
      find: !0,
      first: !0,
      last: !0
    },
        a = {
      CLIENT_MUTATION_ID: "clientMutationId",
      CURSOR: "cursor",
      EDGES: "edges",
      END_CURSOR: "endCursor",
      HAS_NEXT_PAGE: "hasNextPage",
      HAS_PREV_PAGE: "hasPreviousPage",
      NODE: "node",
      PAGE_INFO_TYPE: "PageInfo",
      PAGE_INFO: "pageInfo",
      START_CURSOR: "startCursor"
    },
        s = {
      inject: function (e) {
        a = e;
      },
      get: function () {
        return a;
      },
      isConnectionCall: function (e) {
        return i.hasOwnProperty(e.name);
      },
      hasRangeCalls: function (e) {
        return e.some(function (e) {
          return o.hasOwnProperty(e.name);
        });
      },
      getDefaultPageInfo: function () {
        var e;
        return e = {}, (0, n.default)(e, a.END_CURSOR, null), (0, n.default)(e, a.HAS_NEXT_PAGE, !1), (0, n.default)(e, a.HAS_PREV_PAGE, !1), (0, n.default)(e, a.START_CURSOR, null), e;
      }
    };
    e.exports = s;
  }, function (e, t, r) {
    "use strict";

    var n = r(0),
        i = r(28).DEFAULT_HANDLE_KEY;

    e.exports = function (e, t, r) {
      return t && t !== i ? "__".concat(t, "_").concat(e) : (null == r && n(!1), "__".concat(r, "_").concat(e));
    };
  }, function (e, t, r) {
    "use strict";

    var n = (0, r(7).generateClientID)(r(1).ROOT_ID, "viewer");
    e.exports = {
      VIEWER_ID: n,
      VIEWER_TYPE: "Viewer"
    };
  }, function (e, t, r) {
    "use strict";

    e.exports = {
      ENABLE_VARIABLE_CONNECTION_KEY: !1,
      ENABLE_CONNECTION_RESOLVERS: !1,
      USE_RECORD_SOURCE_MAP_IMPL: !1
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(56),
        i = r(57),
        o = {
      "*": []
    },
        a = {
      "*": []
    },
        s = {},
        u = {
      stop: n
    },
        c = function (e) {
      return "@" !== e.charAt(0);
    },
        l = {
      instrumentMethods: function (e, t) {
        for (var r in t) t.hasOwnProperty(r) && "function" == typeof e[r] && (e[r] = l.instrument(t[r], e[r]));
      },
      instrument: function (e, t) {
        if (!c(e)) return t.attachHandler = n, t.detachHandler = n, t;
        o.hasOwnProperty(e) || (o[e] = []);

        var r = o["*"],
            a = o[e],
            u = [],
            l = [],
            d = function () {
          var n;
          if (0 === a.length && 0 === u.length && 0 === r.length) n = t.apply(this, arguments);else if (l.push([r.length, a.length, u.length, this, arguments, s]), function n() {
            var i = l[l.length - 1];
            i[0] ? (i[0]--, r[i[0]](e, n)) : i[1] ? (i[1]--, a[i[1]](e, n)) : i[2] ? (i[2]--, u[i[2]](e, n)) : i[5] = t.apply(i[3], i[4]);
          }(), (n = l.pop()[5]) === s) throw new Error("RelayProfiler: Handler did not invoke original function.");
          return n;
        };

        return d.attachHandler = function (e) {
          u.push(e);
        }, d.detachHandler = function (e) {
          i(u, e);
        }, d.displayName = "(instrumented " + e + ")", d;
      },
      attachAggregateHandler: function (e, t) {
        c(e) && (o.hasOwnProperty(e) || (o[e] = []), o[e].push(t));
      },
      detachAggregateHandler: function (e, t) {
        c(e) && o.hasOwnProperty(e) && i(o[e], t);
      },
      profile: function (e, t) {
        var r = a["*"].length > 0,
            n = a.hasOwnProperty(e);

        if (n || r) {
          for (var i, o = n && r ? a[e].concat(a["*"]) : n ? a[e] : a["*"], s = o.length - 1; s >= 0; s--) {
            var c = (0, o[s])(e, t);
            (i = i || []).unshift(c);
          }

          return {
            stop: function (e) {
              i && i.forEach(function (t) {
                return t(e);
              });
            }
          };
        }

        return u;
      },
      attachProfileHandler: function (e, t) {
        c(e) && (a.hasOwnProperty(e) || (a[e] = []), a[e].push(t));
      },
      detachProfileHandler: function (e, t) {
        c(e) && a.hasOwnProperty(e) && i(a[e], t);
      }
    };

    e.exports = l;
  }, function (e, t, r) {
    "use strict";

    e.exports = function (e) {
      return Boolean(e && e["@@RelayModernEnvironment"]);
    };
  }, function (e, t, r) {
    "use strict";

    e.exports = {
      DEFAULT_HANDLE_KEY: ""
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(21),
        i = r(0);

    e.exports = function (e) {
      switch (e) {
        case "connection":
          return n;
      }

      i(!1);
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(1).ROOT_TYPE,
        i = r(24).VIEWER_ID,
        o = {
      kind: "linked",
      handle: function (e, t, r) {
        if (null != t && t.__typename === n && "viewer" === e.name) return i;
      }
    };
    e.exports = [o];
  }, function (e, t, r) {
    "use strict";

    var n = r(2)(r(10)),
        i = r(50),
        o = {
      create: function (e, t) {
        for (var r = arguments.length, n = new Array(r > 2 ? r - 2 : 0), i = 2; i < r; i++) n[i - 2] = arguments[i];

        return a("mustfix", e, t, n);
      },
      createWarning: function (e, t) {
        for (var r = arguments.length, n = new Array(r > 2 ? r - 2 : 0), i = 2; i < r; i++) n[i - 2] = arguments[i];

        return a("warn", e, t, n);
      }
    };

    function a(e, t, r, o) {
      var a = new Error(i.apply(void 0, [r].concat((0, n.default)(o))));
      return a.name = t, a.type = e, a.framesToPop = 2, a;
    }

    e.exports = o;
  }, function (e, t, r) {
    "use strict";

    var n = r(5),
        i = r(33),
        o = r(34),
        a = r(1),
        s = r(39),
        u = r(0),
        c = r(13),
        l = c.EXISTENT,
        d = c.UNKNOWN,
        f = n.CONDITION,
        h = n.CLIENT_EXTENSION,
        p = n.DEFER,
        _ = n.CONNECTION_FIELD,
        v = n.FRAGMENT_SPREAD,
        g = n.INLINE_FRAGMENT,
        m = n.LINKED_FIELD,
        b = n.LINKED_HANDLE,
        y = n.MODULE_IMPORT,
        E = n.SCALAR_FIELD,
        D = n.SCALAR_HANDLE,
        R = n.STREAM,
        I = a.getModuleOperationKey,
        S = a.getStorageKey,
        k = a.getArgumentValues;

    var O = function () {
      function e(e, t, r, n, a, s) {
        var u;
        this._operationLoader = null !== (u = a) && void 0 !== u ? u : null, this._handlers = n, this._mutator = new i(e, t), this._recordWasMissing = !1, this._source = e, this._variables = r, this._recordSourceProxy = new o(this._mutator, s);
      }

      var t = e.prototype;
      return t.check = function (e, t) {
        return this._traverse(e, t), !this._recordWasMissing;
      }, t._getVariableValue = function (e) {
        return this._variables.hasOwnProperty(e) || u(!1), this._variables[e];
      }, t._handleMissing = function () {
        this._recordWasMissing = !0;
      }, t._getDataForHandlers = function (e, t) {
        return {
          args: e.args ? k(e.args, this._variables) : {},
          record: this._source.get(t)
        };
      }, t._handleMissingScalarField = function (e, t) {
        var r = this._getDataForHandlers(e, t),
            n = r.args,
            i = r.record,
            o = !0,
            a = !1,
            s = void 0;

        try {
          for (var u, c = this._handlers[Symbol.iterator](); !(o = (u = c.next()).done); o = !0) {
            var l = u.value;

            if ("scalar" === l.kind) {
              var d = l.handle(e, i, n, this._recordSourceProxy);
              if (void 0 !== d) return d;
            }
          }
        } catch (e) {
          a = !0, s = e;
        } finally {
          try {
            o || null == c.return || c.return();
          } finally {
            if (a) throw s;
          }
        }

        this._handleMissing();
      }, t._handleMissingLinkField = function (e, t) {
        var r = this._getDataForHandlers(e, t),
            n = r.args,
            i = r.record,
            o = !0,
            a = !1,
            s = void 0;

        try {
          for (var u, c = this._handlers[Symbol.iterator](); !(o = (u = c.next()).done); o = !0) {
            var d = u.value;

            if ("linked" === d.kind) {
              var f = d.handle(e, i, n, this._recordSourceProxy);
              if (null != f && this._mutator.getStatus(f) === l) return f;
            }
          }
        } catch (e) {
          a = !0, s = e;
        } finally {
          try {
            o || null == c.return || c.return();
          } finally {
            if (a) throw s;
          }
        }

        this._handleMissing();
      }, t._handleMissingPluralLinkField = function (e, t) {
        var r = this,
            n = this._getDataForHandlers(e, t),
            i = n.args,
            o = n.record,
            a = !0,
            s = !1,
            u = void 0;

        try {
          for (var c, d = this._handlers[Symbol.iterator](); !(a = (c = d.next()).done); a = !0) {
            var f = c.value;

            if ("pluralLinked" === f.kind) {
              var h = f.handle(e, o, i, this._recordSourceProxy);
              if (null != h) return h.filter(function (e) {
                return null != e && r._mutator.getStatus(e) === l;
              });
            }
          }
        } catch (e) {
          s = !0, u = e;
        } finally {
          try {
            a || null == d.return || d.return();
          } finally {
            if (s) throw u;
          }
        }

        this._handleMissing();
      }, t._traverse = function (e, t) {
        var r = this._mutator.getStatus(t);

        r === d && this._handleMissing(), r === l && this._traverseSelections(e.selections, t);
      }, t._traverseSelections = function (e, t) {
        var r = this;
        e.forEach(function (n) {
          switch (n.kind) {
            case E:
              r._checkScalar(n, t);

              break;

            case m:
              n.plural ? r._checkPluralLink(n, t) : r._checkLink(n, t);
              break;

            case f:
              r._getVariableValue(n.condition) === n.passingValue && r._traverseSelections(n.selections, t);
              break;

            case g:
              var i = r._mutator.getType(t);

              null != i && i === n.type && r._traverseSelections(n.selections, t);
              break;

            case b:
              var o = s(n, e, r._variables);
              o.plural ? r._checkPluralLink(o, t) : r._checkLink(o, t);
              break;

            case y:
              r._checkModuleImport(n, t);

              break;

            case p:
            case R:
              r._traverseSelections(n.selections, t);

              break;

            case D:
            case v:
              u(!1);
              break;

            case h:
              var a = r._recordWasMissing;
              r._traverseSelections(n.selections, t), r._recordWasMissing = a;
              break;

            case _:
              u(!1);
              break;

            default:
              u(!1);
          }
        });
      }, t._checkModuleImport = function (e, t) {
        var r = this._operationLoader;
        null === r && u(!1);

        var n = I(e.documentName),
            i = this._mutator.getValue(t, n);

        if (null != i) {
          var o = r.get(i);
          null != o ? this._traverse(o, t) : this._handleMissing();
        } else void 0 === i && this._handleMissing();
      }, t._checkScalar = function (e, t) {
        var r = S(e, this._variables),
            n = this._mutator.getValue(t, r);

        void 0 === n && void 0 !== (n = this._handleMissingScalarField(e, t)) && this._mutator.setValue(t, r, n);
      }, t._checkLink = function (e, t) {
        var r = S(e, this._variables),
            n = this._mutator.getLinkedRecordID(t, r);

        void 0 === n && null != (n = this._handleMissingLinkField(e, t)) && this._mutator.setLinkedRecordID(t, r, n), null != n && this._traverse(e, n);
      }, t._checkPluralLink = function (e, t) {
        var r = this,
            n = S(e, this._variables),
            i = this._mutator.getLinkedRecordIDs(t, n);

        void 0 === i && null != (i = this._handleMissingPluralLinkField(e, t)) && this._mutator.setLinkedRecordIDs(t, n, i), i && i.forEach(function (t) {
          null != t && r._traverse(e, t);
        });
      }, e;
    }();

    e.exports = {
      check: function (e, t, r, n, i, o) {
        var a = r.dataID,
            s = r.node,
            u = r.variables;
        return new O(e, t, u, n, i, o).check(s, a);
      }
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(2)(r(4)),
        i = r(6),
        o = r(0),
        a = r(13).EXISTENT,
        s = r(1),
        u = s.UNPUBLISH_FIELD_SENTINEL,
        c = s.UNPUBLISH_RECORD_SENTINEL,
        l = function () {
      function e(e, t, r) {
        this.__sources = [t, e], this._backup = r, this._base = e, this._sink = t;
      }

      var t = e.prototype;
      return t.unstable_getRawRecordWithChanges = function (e) {
        var t = this._base.get(e),
            r = this._sink.get(e);

        return void 0 === r ? null == t ? t : i.clone(t) : null === r ? null : r !== c ? null != t ? i.update(t, r) : i.clone(r) : void 0;
      }, t._createBackupRecord = function (e) {
        var t = this._backup;

        if (t && !t.has(e)) {
          var r = this._base.get(e);

          null != r ? t.set(e, r) : null === r && t.delete(e);
        }
      }, t._setSentinelFieldsInBackupRecord = function (e, t) {
        var r = this._backup;

        if (r) {
          var i = r.get(e);

          if (i && i !== c) {
            var o = null;

            for (var a in t) t.hasOwnProperty(a) && (a in i || ((o = o || (0, n.default)({}, i))[a] = u));

            r.set(e, o || i);
          }
        }
      }, t._setSentinelFieldInBackupRecord = function (e, t) {
        var r = this._backup;

        if (r) {
          var o = r.get(e);

          if (o && o !== c && !(t in o)) {
            var a = (0, n.default)({}, o);
            i.setValue(a, t, u), r.set(e, a);
          }
        }
      }, t._getSinkRecord = function (e) {
        var t = this._sink.get(e);

        if (!t) {
          var r = this._base.get(e);

          r || o(!1), t = i.create(e, i.getType(r)), this._sink.set(e, t);
        }

        return t;
      }, t.copyFields = function (e, t) {
        var r = this._sink.get(e),
            n = this._base.get(e);

        r || n || o(!1), this._createBackupRecord(t);

        var a = this._getSinkRecord(t);

        n && i.copyFields(n, a), r && i.copyFields(r, a), this._setSentinelFieldsInBackupRecord(t, a);
      }, t.copyFieldsFromRecord = function (e, t) {
        this._createBackupRecord(t);

        var r = this._getSinkRecord(t);

        i.copyFields(e, r), this._setSentinelFieldsInBackupRecord(t, r);
      }, t.create = function (e, t) {
        (this._base.getStatus(e) === a || this._sink.getStatus(e) === a) && o(!1), this._backup && this._backup.set(e, c);
        var r = i.create(e, t);

        this._sink.set(e, r);
      }, t.delete = function (e) {
        this._createBackupRecord(e), this._sink.delete(e);
      }, t.getStatus = function (e) {
        return this._sink.has(e) ? this._sink.getStatus(e) : this._base.getStatus(e);
      }, t.getType = function (e) {
        for (var t = 0; t < this.__sources.length; t++) {
          var r = this.__sources[t].get(e);

          if (r) return i.getType(r);
          if (null === r) return null;
        }
      }, t.getValue = function (e, t) {
        for (var r = 0; r < this.__sources.length; r++) {
          var n = this.__sources[r].get(e);

          if (n) {
            var o = i.getValue(n, t);
            if (void 0 !== o) return o;
          } else if (null === n) return null;
        }
      }, t.setValue = function (e, t, r) {
        this._createBackupRecord(e);

        var n = this._getSinkRecord(e);

        i.setValue(n, t, r), this._setSentinelFieldInBackupRecord(e, t);
      }, t.getLinkedRecordID = function (e, t) {
        for (var r = 0; r < this.__sources.length; r++) {
          var n = this.__sources[r].get(e);

          if (n) {
            var o = i.getLinkedRecordID(n, t);
            if (void 0 !== o) return o;
          } else if (null === n) return null;
        }
      }, t.setLinkedRecordID = function (e, t, r) {
        this._createBackupRecord(e);

        var n = this._getSinkRecord(e);

        i.setLinkedRecordID(n, t, r), this._setSentinelFieldInBackupRecord(e, t);
      }, t.getLinkedRecordIDs = function (e, t) {
        for (var r = 0; r < this.__sources.length; r++) {
          var n = this.__sources[r].get(e);

          if (n) {
            var o = i.getLinkedRecordIDs(n, t);
            if (void 0 !== o) return o;
          } else if (null === n) return null;
        }
      }, t.setLinkedRecordIDs = function (e, t, r) {
        this._createBackupRecord(e);

        var n = this._getSinkRecord(e);

        i.setLinkedRecordIDs(n, t, r), this._setSentinelFieldInBackupRecord(e, t);
      }, e;
    }();

    e.exports = l;
  }, function (e, t, r) {
    "use strict";

    var n = r(6),
        i = r(53),
        o = r(35),
        a = r(0),
        s = r(36),
        u = r(13),
        c = u.EXISTENT,
        l = u.NONEXISTENT,
        d = r(1),
        f = d.ROOT_ID,
        h = d.ROOT_TYPE,
        p = function () {
      function e(e, t, r) {
        this.__mutator = e, this._handlerProvider = r || null, this._proxies = {}, this._getDataID = t;
      }

      var t = e.prototype;
      return t.publishSource = function (e, t) {
        var r = this;
        e.getRecordIDs().forEach(function (t) {
          var i = e.getStatus(t);

          if (i === c) {
            var o = e.get(t);
            o && (r.__mutator.getStatus(t) !== c && r.create(t, n.getType(o)), r.__mutator.copyFieldsFromRecord(o, t));
          } else i === l && r.delete(t);
        }), t && t.length && t.forEach(function (e) {
          var t = r._handlerProvider && r._handlerProvider(e.handle);

          t || a(!1), t.update(r, e);
        });
      }, t.commitPayload = function (e, t) {
        if (!t) return new o(this, e.fragment);
        var r = s(e.root, t, null, {
          getDataID: this._getDataID,
          request: e.request
        }),
            n = r.source,
            i = r.fieldPayloads;
        return this.publishSource(n, i), new o(this, e.fragment);
      }, t.create = function (e, t) {
        this.__mutator.create(e, t), delete this._proxies[e];
        var r = this.get(e);
        return r || a(!1), r;
      }, t.delete = function (e) {
        e === f && a(!1), delete this._proxies[e], this.__mutator.delete(e);
      }, t.get = function (e) {
        if (!this._proxies.hasOwnProperty(e)) {
          var t = this.__mutator.getStatus(e);

          this._proxies[e] = t === c ? new i(this, this.__mutator, e) : t === l ? null : void 0;
        }

        return this._proxies[e];
      }, t.getRoot = function () {
        var e = this.get(f);
        return e || (e = this.create(f, h)), e && e.getType() === h || a(!1), e;
      }, e;
    }();

    e.exports = p;
  }, function (e, t, r) {
    "use strict";

    var n = r(0),
        i = r(1).getStorageKey,
        o = function () {
      function e(e, t) {
        this.__recordSource = e, this._readSelector = t;
      }

      var t = e.prototype;
      return t.create = function (e, t) {
        return this.__recordSource.create(e, t);
      }, t.delete = function (e) {
        this.__recordSource.delete(e);
      }, t.get = function (e) {
        return this.__recordSource.get(e);
      }, t.getRoot = function () {
        return this.__recordSource.getRoot();
      }, t._getRootField = function (e, t, r) {
        var i = e.node.selections.find(function (e) {
          return "LinkedField" === e.kind && e.name === t;
        });
        return i && "LinkedField" === i.kind || n(!1), i.plural !== r && n(!1), i;
      }, t.getRootField = function (e) {
        var t = this._getRootField(this._readSelector, e, !1),
            r = i(t, this._readSelector.variables);

        return this.getRoot().getLinkedRecord(r);
      }, t.getPluralRootField = function (e) {
        var t = this._getRootField(this._readSelector, e, !0),
            r = i(t, this._readSelector.variables);

        return this.getRoot().getLinkedRecords(r);
      }, e;
    }();

    e.exports = o;
  }, function (e, t, r) {
    "use strict";

    var n = r(2)(r(4)),
        i = r(6),
        o = r(14),
        a = r(37),
        s = r(1),
        u = s.ROOT_ID,
        c = s.ROOT_TYPE;

    e.exports = function (e, t, r, s) {
      var l = o.create();
      l.set(u, i.create(u, c));
      var d = a.normalize(l, e, t, s);
      return (0, n.default)({}, d, {
        errors: r
      });
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(2)(r(10)),
        i = r(38),
        o = r(22),
        a = r(6),
        s = r(26),
        u = r(0),
        c = (r(3), r(5)),
        l = c.CONDITION,
        d = c.CLIENT_EXTENSION,
        f = c.DEFER,
        h = c.CONNECTION_FIELD,
        p = c.INLINE_FRAGMENT,
        _ = c.LINKED_FIELD,
        v = c.LINKED_HANDLE,
        g = c.MODULE_IMPORT,
        m = c.SCALAR_FIELD,
        b = c.SCALAR_HANDLE,
        y = c.STREAM,
        E = r(7),
        D = E.generateClientID,
        R = (E.isClientID, r(9).createNormalizationSelector),
        I = r(1),
        S = I.getArgumentValues,
        k = I.getHandleStorageKey,
        O = I.getModuleComponentKey,
        N = I.getModuleOperationKey,
        L = I.getStorageKey,
        P = I.TYPENAME_KEY;

    function T(e, t, r, n) {
      var i = t.dataID,
          o = t.node,
          a = t.variables;
      return new F(e, a, n).normalizeResponse(o, i, r);
    }

    var F = function () {
      function e(e, t, r) {
        this._connectionEvents = [], this._getDataId = r.getDataID, this._handleFieldPayloads = [], this._incrementalPlaceholders = [], this._isClientExtension = !1, this._moduleImportPayloads = [], this._path = r.path ? (0, n.default)(r.path) : [], this._recordSource = e, this._request = r.request, this._variables = t;
      }

      var t = e.prototype;
      return t.normalizeResponse = function (e, t, r) {
        var n = this._recordSource.get(t);

        return n || u(!1), this._traverseSelections(e, n, r), {
          connectionEvents: this._connectionEvents,
          errors: null,
          fieldPayloads: this._handleFieldPayloads,
          incrementalPlaceholders: this._incrementalPlaceholders,
          moduleImportPayloads: this._moduleImportPayloads,
          source: this._recordSource
        };
      }, t._getVariableValue = function (e) {
        return this._variables.hasOwnProperty(e) || u(!1), this._variables[e];
      }, t._getRecordType = function (e) {
        var t = e[P];
        return null == t && u(!1), t;
      }, t._traverseSelections = function (e, t, r) {
        for (var n = 0; n < e.selections.length; n++) {
          var i = e.selections[n];

          switch (i.kind) {
            case m:
            case _:
              this._normalizeField(e, i, t, r);

              break;

            case l:
              this._getVariableValue(i.condition) === i.passingValue && this._traverseSelections(i, t, r);
              break;

            case p:
              a.getType(t) === i.type && this._traverseSelections(i, t, r);
              break;

            case v:
            case b:
              var o = i.args ? S(i.args, this._variables) : {},
                  s = L(i, this._variables),
                  c = k(i, this._variables);

              this._handleFieldPayloads.push({
                args: o,
                dataID: a.getDataID(t),
                fieldKey: s,
                handle: i.handle,
                handleKey: c
              });

              break;

            case g:
              this._normalizeModuleImport(e, i, t, r);

              break;

            case f:
              this._normalizeDefer(i, t, r);

              break;

            case y:
              this._normalizeStream(i, t, r);

              break;

            case d:
              var E = this._isClientExtension;
              this._isClientExtension = !0, this._traverseSelections(i, t, r), this._isClientExtension = E;
              break;

            case h:
              this._normalizeConnectionField(e, i, t, r);

              break;

            default:
              u(!1);
          }
        }
      }, t._normalizeDefer = function (e, t, r) {
        !1 === (null === e.if || this._getVariableValue(e.if)) ? this._traverseSelections(e, t, r) : this._incrementalPlaceholders.push({
          kind: "defer",
          data: r,
          label: e.label,
          path: (0, n.default)(this._path),
          selector: R(e, a.getDataID(t), this._variables),
          typeName: a.getType(t)
        });
      }, t._normalizeStream = function (e, t, r) {
        this._traverseSelections(e, t, r), !0 === (null === e.if || this._getVariableValue(e.if)) && this._incrementalPlaceholders.push({
          kind: "stream",
          label: e.label,
          path: (0, n.default)(this._path),
          parentID: a.getDataID(t),
          node: e,
          variables: this._variables
        });
      }, t._normalizeModuleImport = function (e, t, r, i) {
        var o, s;
        "object" == typeof i && i || u(!1);
        var c = a.getType(r),
            l = O(t.documentName),
            d = i[l];
        a.setValue(r, l, null !== (o = d) && void 0 !== o ? o : null);
        var f = N(t.documentName),
            h = i[f];
        a.setValue(r, f, null !== (s = h) && void 0 !== s ? s : null), null != h && this._moduleImportPayloads.push({
          data: i,
          dataID: a.getDataID(r),
          operationReference: h,
          path: (0, n.default)(this._path),
          typeName: c,
          variables: this._variables
        });
      }, t._normalizeConnectionField = function (e, t, r, n) {
        this._normalizeField(e, t, r, n);

        var s = a.getDataID(r),
            u = i.createConnectionID(s, t.label),
            c = null != t.args ? S(t.args, this._variables) : {},
            l = L(t, this._variables),
            d = o.get(),
            f = d.EDGES,
            h = d.END_CURSOR,
            p = d.HAS_NEXT_PAGE,
            _ = d.HAS_PREV_PAGE,
            v = d.PAGE_INFO,
            g = d.START_CURSOR,
            m = a.getLinkedRecordID(r, l),
            b = null != m ? this._recordSource.get(m) : null;

        if (null != b) {
          var y = a.getLinkedRecordIDs(b, f);

          if (null != y) {
            var E,
                D,
                R,
                I,
                k = a.getLinkedRecordID(b, v),
                O = null != k ? this._recordSource.get(k) : null;
            null != O && (E = a.getValue(O, h), D = a.getValue(O, p), R = a.getValue(O, _), I = a.getValue(O, g)), this._connectionEvents.push({
              kind: "fetch",
              connectionID: u,
              args: c,
              edgeIDs: y,
              pageInfo: {
                endCursor: "string" == typeof E ? E : null,
                startCursor: "string" == typeof I ? I : null,
                hasNextPage: "boolean" == typeof D ? D : null,
                hasPrevPage: "boolean" == typeof R ? R : null
              },
              request: this._request
            });
          }
        }
      }, t._normalizeField = function (e, t, r, n) {
        "object" == typeof n && n || u(!1);
        var i = t.alias || t.name,
            o = L(t, this._variables),
            s = n[i];
        if (null == s) return void 0 === s ? void 0 : void a.setValue(r, o, null);
        t.kind === m ? a.setValue(r, o, s) : t.kind === _ || t.kind === h ? (this._path.push(i), t.plural ? this._normalizePluralLink(t, r, o, s) : this._normalizeLink(t, r, o, s), this._path.pop()) : u(!1);
      }, t._normalizeLink = function (e, t, r, n) {
        var i;
        "object" == typeof n && n || u(!1);
        var o = this._getDataId(n, null !== (i = e.concreteType) && void 0 !== i ? i : this._getRecordType(n)) || a.getLinkedRecordID(t, r) || D(a.getDataID(t), r);
        "string" != typeof o && u(!1), a.setLinkedRecordID(t, r, o);

        var s = this._recordSource.get(o);

        if (s) 0;else {
          var c = e.concreteType || this._getRecordType(n);

          s = a.create(o, c), this._recordSource.set(o, s);
        }

        this._traverseSelections(e, s, n);
      }, t._normalizePluralLink = function (e, t, r, n) {
        var i = this;
        Array.isArray(n) || u(!1);
        var o = a.getLinkedRecordIDs(t, r),
            s = [];
        n.forEach(function (n, c) {
          var l;

          if (null != n) {
            i._path.push(String(c)), "object" != typeof n && u(!1);
            var d = i._getDataId(n, null !== (l = e.concreteType) && void 0 !== l ? l : i._getRecordType(n)) || o && o[c] || D(a.getDataID(t), r, c);
            "string" != typeof d && u(!1), s.push(d);

            var f = i._recordSource.get(d);

            if (f) 0;else {
              var h = e.concreteType || i._getRecordType(n);

              f = a.create(d, h), i._recordSource.set(d, f);
            }
            i._traverseSelections(e, f, n), i._path.pop();
          } else s.push(n);
        }), a.setLinkedRecordIDs(t, r, s);
      }, t._validateRecordType = function (e, t, r) {
        var n;
        null !== (n = t.concreteType) && void 0 !== n || this._getRecordType(r);
      }, e;
    }();

    T = s.instrument("RelayResponseNormalizer.normalize", T), e.exports = {
      normalize: T
    };
  }, function (e, t, r) {
    "use strict";

    e.exports = {
      createConnectionID: function (e, t) {
        return "connection:".concat(e, ":").concat(t);
      },
      createConnectionRecord: function (e) {
        return {
          __id: e,
          __typename: "__ConnectionRecord",
          events: []
        };
      },
      CONNECTION_KEY: "__connection",
      CONNECTION_TYPENAME: "__ConnectionRecord"
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(2)(r(4)),
        i = r(18),
        o = r(0),
        a = r(5).LINKED_FIELD,
        s = r(1).getHandleStorageKey;

    e.exports = function (e, t, r) {
      var u = t.find(function (t) {
        return t.kind === a && t.name === e.name && t.alias === e.alias && i(t.args, e.args);
      });
      u && u.kind === a || o(!1);
      var c = s(e, r);
      return (0, n.default)({}, u, {
        args: null,
        name: c,
        storageKey: c
      });
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(0),
        i = function () {
      function e() {
        this._ownersToPendingOperations = new Map(), this._pendingOperationsToOwners = new Map(), this._ownersToPromise = new Map();
      }

      var t = e.prototype;
      return t.update = function (e, t) {
        if (0 !== t.size) {
          var r = new Set(),
              n = !0,
              i = !1,
              o = void 0;

          try {
            for (var a, s = t[Symbol.iterator](); !(n = (a = s.next()).done); n = !0) {
              var u = a.value,
                  c = this._ownersToPendingOperations.get(u);

              null != c ? c.has(e) || (c.add(e), r.add(u)) : (this._ownersToPendingOperations.set(u, new Set([e])), r.add(u));
            }
          } catch (e) {
            i = !0, o = e;
          } finally {
            try {
              n || null == s.return || s.return();
            } finally {
              if (i) throw o;
            }
          }

          if (0 !== r.size) {
            var l = this._pendingOperationsToOwners.get(e) || new Set(),
                d = !0,
                f = !1,
                h = void 0;

            try {
              for (var p, _ = r[Symbol.iterator](); !(d = (p = _.next()).done); d = !0) {
                var v = p.value;
                this._resolveOwnerResolvers(v), l.add(v);
              }
            } catch (e) {
              f = !0, h = e;
            } finally {
              try {
                d || null == _.return || _.return();
              } finally {
                if (f) throw h;
              }
            }

            this._pendingOperationsToOwners.set(e, l);
          }
        }
      }, t.complete = function (e) {
        var t = this._pendingOperationsToOwners.get(e);

        if (null != t) {
          var r = new Set(),
              n = new Set(),
              i = !0,
              o = !1,
              a = void 0;

          try {
            for (var s, u = t[Symbol.iterator](); !(i = (s = u.next()).done); i = !0) {
              var c = s.value,
                  l = this._ownersToPendingOperations.get(c);

              l && (l.delete(e), l.size > 0 ? n.add(c) : r.add(c));
            }
          } catch (e) {
            o = !0, a = e;
          } finally {
            try {
              i || null == u.return || u.return();
            } finally {
              if (o) throw a;
            }
          }

          var d = !0,
              f = !1,
              h = void 0;

          try {
            for (var p, _ = r[Symbol.iterator](); !(d = (p = _.next()).done); d = !0) {
              var v = p.value;
              this._resolveOwnerResolvers(v), this._ownersToPendingOperations.delete(v);
            }
          } catch (e) {
            f = !0, h = e;
          } finally {
            try {
              d || null == _.return || _.return();
            } finally {
              if (f) throw h;
            }
          }

          var g = !0,
              m = !1,
              b = void 0;

          try {
            for (var y, E = n[Symbol.iterator](); !(g = (y = E.next()).done); g = !0) {
              var D = y.value;

              this._resolveOwnerResolvers(D);
            }
          } catch (e) {
            m = !0, b = e;
          } finally {
            try {
              g || null == E.return || E.return();
            } finally {
              if (m) throw b;
            }
          }

          this._pendingOperationsToOwners.delete(e);
        }
      }, t._resolveOwnerResolvers = function (e) {
        var t = this._ownersToPromise.get(e);

        null != t && t.resolve(), this._ownersToPromise.delete(e);
      }, t.getPromiseForPendingOperationsAffectingOwner = function (e) {
        if (!this._ownersToPendingOperations.has(e)) return null;

        var t,
            r = this._ownersToPromise.get(e);

        if (null != r) return r.promise;
        var i = new Promise(function (e) {
          t = e;
        });
        return null == t && n(!1), this._ownersToPromise.set(e, {
          promise: i,
          resolve: t
        }), i;
      }, e;
    }();

    e.exports = i;
  }, function (e, t, r) {
    "use strict";

    var n = r(38),
        i = r(6),
        o = r(0),
        a = r(5),
        s = a.CONDITION,
        u = a.CLIENT_EXTENSION,
        c = a.CONNECTION_FIELD,
        l = a.FRAGMENT_SPREAD,
        d = a.INLINE_DATA_FRAGMENT_SPREAD,
        f = a.INLINE_FRAGMENT,
        h = a.LINKED_FIELD,
        p = a.MODULE_IMPORT,
        _ = a.SCALAR_FIELD,
        v = r(1),
        g = v.FRAGMENTS_KEY,
        m = v.FRAGMENT_OWNER_KEY,
        b = v.FRAGMENT_PROP_NAME_KEY,
        y = v.ID_KEY,
        E = v.MODULE_COMPONENT_KEY,
        D = v.getArgumentValues,
        R = v.getStorageKey,
        I = v.getModuleComponentKey;

    var S = function () {
      function e(e, t) {
        this._isMissingData = !1, this._owner = t.owner, this._recordSource = e, this._seenRecords = {}, this._selector = t, this._variables = t.variables;
      }

      var t = e.prototype;
      return t.read = function () {
        var e = this._selector,
            t = e.node,
            r = e.dataID;
        return {
          data: this._traverse(t, r, null),
          seenRecords: this._seenRecords,
          isMissingData: this._isMissingData,
          selector: this._selector
        };
      }, t._traverse = function (e, t, r) {
        var n = this._recordSource.get(t);

        if (this._seenRecords[t] = n, null == n) return void 0 === n && (this._isMissingData = !0), n;
        var i = r || {};
        return this._traverseSelections(e.selections, n, i), i;
      }, t._getVariableValue = function (e) {
        return this._variables.hasOwnProperty(e) || o(!1), this._variables[e];
      }, t._traverseSelections = function (e, t, r) {
        for (var n = 0; n < e.length; n++) {
          var a = e[n];

          switch (a.kind) {
            case _:
              this._readScalar(a, t, r);

              break;

            case h:
              a.plural ? this._readPluralLink(a, t, r) : this._readLink(a, t, r);
              break;

            case s:
              this._getVariableValue(a.condition) === a.passingValue && this._traverseSelections(a.selections, t, r);
              break;

            case f:
              var v = i.getType(t);
              null != v && v === a.type && this._traverseSelections(a.selections, t, r);
              break;

            case l:
              this._createFragmentPointer(a, t, r);

              break;

            case p:
              this._readModuleImport(a, t, r);

              break;

            case d:
              this._createInlineDataFragmentPointer(a, t, r);

              break;

            case u:
              var g = this._isMissingData;
              this._traverseSelections(a.selections, t, r), this._isMissingData = g;
              break;

            case c:
              this._readConnectionField(a, t, r);

              break;

            default:
              o(!1);
          }
        }
      }, t._readConnectionField = function (e, t, r) {
        var a,
            s,
            u = i.getDataID(t),
            c = n.createConnectionID(u, e.label),
            l = e.selections.find(function (e) {
          return "LinkedField" === e.kind && e.plural && "edges" === e.name;
        });
        l && "LinkedField" === l.kind || o(!1);
        var d = {
          variables: this._variables,
          edgeField: l,
          id: c,
          label: e.label,
          resolver: e.resolver
        },
            f = null !== (a = e.alias) && void 0 !== a ? a : e.name,
            h = r[f];
        null != h && "object" != typeof h && o(!1);
        var p = null !== (s = h) && void 0 !== s ? s : {};
        r[f] = p, p[n.CONNECTION_KEY] = d;
      }, t._readScalar = function (e, t, r) {
        var n,
            o = null !== (n = e.alias) && void 0 !== n ? n : e.name,
            a = R(e, this._variables),
            s = i.getValue(t, a);
        void 0 === s && (this._isMissingData = !0), r[o] = s;
      }, t._readLink = function (e, t, r) {
        var n,
            a = null !== (n = e.alias) && void 0 !== n ? n : e.name,
            s = R(e, this._variables),
            u = i.getLinkedRecordID(t, s);
        if (null == u) return r[a] = u, void (void 0 === u && (this._isMissingData = !0));
        var c = r[a];
        null != c && "object" != typeof c && o(!1), r[a] = this._traverse(e, u, c);
      }, t._readPluralLink = function (e, t, r) {
        var n,
            a = this,
            s = null !== (n = e.alias) && void 0 !== n ? n : e.name,
            u = R(e, this._variables),
            c = i.getLinkedRecordIDs(t, u);
        if (null == c) return r[s] = c, void (void 0 === c && (this._isMissingData = !0));
        var l = r[s];
        null == l || Array.isArray(l) || o(!1);
        var d = l || [];
        c.forEach(function (t, r) {
          if (null == t) return void 0 === t && (a._isMissingData = !0), void (d[r] = t);
          var n = d[r];
          null != n && "object" != typeof n && o(!1), d[r] = a._traverse(e, t, n);
        }), r[s] = d;
      }, t._readModuleImport = function (e, t, r) {
        var n = I(e.documentName),
            o = i.getValue(t, n);
        null != o ? (this._createFragmentPointer({
          kind: "FragmentSpread",
          name: e.fragmentName,
          args: null
        }, t, r), r[b] = e.fragmentPropName, r[E] = o) : void 0 === o && (this._isMissingData = !0);
      }, t._createFragmentPointer = function (e, t, r) {
        var n = r[g];
        null == n && (n = r[g] = {}), ("object" != typeof n || null == n) && o(!1), null == r[y] && (r[y] = i.getDataID(t)), n[e.name] = e.args ? D(e.args, this._variables) : {}, r[m] = this._owner;
      }, t._createInlineDataFragmentPointer = function (e, t, r) {
        var n = r[g];
        null == n && (n = r[g] = {}), ("object" != typeof n || null == n) && o(!1), null == r[y] && (r[y] = i.getDataID(t));
        var a = {};
        this._traverseSelections(e.selections, t, a), n[e.name] = a;
      }, e;
    }();

    e.exports = {
      read: function (e, t) {
        return new S(e, t).read();
      }
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(24),
        i = n.VIEWER_ID,
        o = n.VIEWER_TYPE;

    e.exports = function (e, t) {
      return t === o && null == e.id ? i : e.id;
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(0),
        i = r(44),
        o = r(1).FRAGMENT_OWNER_KEY;

    function a(e, t) {
      var r;
      return null == t ? null : ("object" != typeof t && n(!1), null !== (r = t[o]) && void 0 !== r ? r : null);
    }

    function s(e, t) {
      return Array.isArray(t) ? function (e, t) {
        return t.map(function (e) {
          return a(0, e);
        });
      }(0, t) : a(0, t);
    }

    e.exports = {
      getFragmentOwner: s,
      getFragmentOwners: function (e, t) {
        return i(e, function (e, r) {
          return s(0, t[r]);
        });
      }
    };
  }, function (e, t) {
    e.exports = s;
  }, function (e, t, r) {
    "use strict";

    e.exports = function e(t, r) {
      if (t === r || "object" != typeof t || !t || "object" != typeof r || !r) return r;
      var n = !1,
          i = Array.isArray(t) ? t : null,
          o = Array.isArray(r) ? r : null;
      if (i && o) n = o.reduce(function (t, r, n) {
        var a = e(i[n], r);
        return a !== o[n] && (o[n] = a), t && a === i[n];
      }, !0) && i.length === o.length;else if (!i && !o) {
        var a = t,
            s = r,
            u = Object.keys(a),
            c = Object.keys(s);
        n = c.reduce(function (t, r) {
          var n = e(a[r], s[r]);
          return n !== s[r] && (s[r] = n), t && n === a[r];
        }, !0) && u.length === c.length;
      }
      return n ? t : r;
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(11);
    e.exports = {
      convertFetch: function (e) {
        return function (t, r, i, o) {
          var a = e(t, r, i, o);
          return a instanceof Error ? n.create(function (e) {
            return e.error(a);
          }) : n.from(a);
        };
      },
      convertSubscribe: function (e) {
        return function (t, r, i) {
          return n.fromLegacy(function (n) {
            return e(t, r, i, n);
          });
        };
      }
    };
  }, function (e, t, r) {
    "use strict";

    e.exports = function (e, t) {
      return e === t && (null === e || "object" != typeof e);
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(8),
        i = r(43).getFragmentOwner,
        o = r(9),
        a = o.getDataIDsFromFragment,
        s = o.getVariablesFromFragment;

    e.exports = function (e, t) {
      var r,
          o,
          u,
          c = i(e, t),
          l = s(e, t),
          d = a(e, t),
          f = Array.isArray(c) ? c.map(function (e) {
        var t, r;
        return null !== (t = null !== (r = null == e ? void 0 : e.node.params.id) && void 0 !== r ? r : null == e ? void 0 : e.node.params.name) && void 0 !== t ? t : "";
      }) : null !== (r = null !== (o = null == c ? void 0 : c.node.params.id) && void 0 !== o ? o : null == c ? void 0 : c.node.params.name) && void 0 !== r ? r : "",
          h = Array.isArray(c) ? c.map(function (e) {
        var t;
        return null !== (t = null == e ? void 0 : e.variables) && void 0 !== t ? t : null;
      }) : null !== (u = null == c ? void 0 : c.variables) && void 0 !== u ? u : null;
      return "".concat(e.name, "-").concat(JSON.stringify(n({
        dataIDs: d,
        fragmentVariables: l,
        fragmentOwnerID: f,
        fragmentOwnerVariables: h
      })));
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(5),
        i = r(20),
        o = r(21),
        a = r(22),
        s = r(17),
        u = r(28),
        c = r(29),
        l = r(30),
        d = r(31),
        f = r(25),
        h = r(51),
        p = r(43),
        _ = r(15),
        v = r(12),
        g = r(9),
        m = r(63),
        b = r(67),
        y = r(68),
        E = r(11),
        D = r(40),
        R = r(26),
        I = r(69),
        S = r(14),
        k = r(1),
        O = r(24),
        N = r(70),
        L = r(71),
        P = r(72),
        T = r(74),
        F = r(76),
        A = r(77),
        w = r(19),
        x = r(78),
        C = r(79),
        M = r(48),
        U = r(81),
        j = r(23),
        V = r(27),
        q = r(47),
        K = r(45),
        G = r(82),
        H = r(8),
        Y = r(7).generateClientID;

    e.exports = {
      Environment: h,
      Network: b,
      Observable: E,
      QueryResponseCache: I,
      RecordSource: S,
      Store: m,
      areEqualSelectors: g.areEqualSelectors,
      createFragmentSpecResolver: T,
      createNormalizationSelector: g.createNormalizationSelector,
      createOperationDescriptor: v.createOperationDescriptor,
      createReaderSelector: g.createReaderSelector,
      createRequestDescriptor: v.createRequestDescriptor,
      getDataIDsFromFragment: g.getDataIDsFromFragment,
      getDataIDsFromObject: g.getDataIDsFromObject,
      getFragment: _.getFragment,
      getFragmentOwner: p.getFragmentOwner,
      getFragmentOwners: p.getFragmentOwners,
      getInlineDataFragment: _.getInlineDataFragment,
      getModuleComponentKey: k.getModuleComponentKey,
      getModuleOperationKey: k.getModuleOperationKey,
      getPaginationFragment: _.getPaginationFragment,
      getPluralSelector: g.getPluralSelector,
      getRefetchableFragment: _.getRefetchableFragment,
      getRequest: _.getRequest,
      getSelector: g.getSelector,
      getSelectorsFromObject: g.getSelectorsFromObject,
      getSingularSelector: g.getSingularSelector,
      getStorageKey: k.getStorageKey,
      getVariablesFromFragment: g.getVariablesFromFragment,
      getVariablesFromObject: g.getVariablesFromObject,
      getVariablesFromPluralFragment: g.getVariablesFromPluralFragment,
      getVariablesFromSingularFragment: g.getVariablesFromSingularFragment,
      graphql: _.graphql,
      MutationTypes: s.MutationTypes,
      RangeOperations: s.RangeOperations,
      DefaultHandlerProvider: c,
      DefaultMissingFieldHandlers: l,
      ConnectionHandler: o,
      VIEWER_ID: O.VIEWER_ID,
      VIEWER_TYPE: O.VIEWER_TYPE,
      applyOptimisticMutation: N,
      commitLocalUpdate: L,
      commitMutation: P,
      fetchQuery: x,
      isRelayModernEnvironment: V,
      requestSubscription: G,
      ConnectionInterface: a,
      RelayProfiler: R,
      RelayConcreteNode: n,
      RelayError: d,
      RelayFeatureFlags: f,
      RelayNetworkLoggerTransaction: y,
      DEFAULT_HANDLE_KEY: u.DEFAULT_HANDLE_KEY,
      FRAGMENTS_KEY: k.FRAGMENTS_KEY,
      FRAGMENT_OWNER_KEY: k.FRAGMENT_OWNER_KEY,
      ID_KEY: k.ID_KEY,
      REF_KEY: k.REF_KEY,
      REFS_KEY: k.REFS_KEY,
      ROOT_ID: k.ROOT_ID,
      ROOT_TYPE: k.ROOT_TYPE,
      TYPENAME_KEY: k.TYPENAME_KEY,
      createRelayNetworkLogger: A,
      deepFreeze: w,
      generateClientID: Y,
      getRelayHandleKey: j,
      isScalarAndEqual: q,
      recycleNodesInto: K,
      stableCopy: H,
      getFragmentIdentifier: M,
      getFragmentSpecIdentifier: U,
      __internal: {
        OperationTracker: D,
        createRelayContext: F,
        getModernOperationVariables: i.getOperationVariables,
        fetchQuery: C.fetchQuery,
        fetchQueryDeduped: C.fetchQueryDeduped,
        getPromiseForRequestInFlight: C.getPromiseForRequestInFlight,
        getObservableForRequestInFlight: C.getObservableForRequestInFlight,
        hasRequestInFlight: C.hasRequestInFlight
      }
    };
  }, function (e, t) {
    e.exports = u;
  }, function (e, t, r) {
    "use strict";

    (function (t) {
      var n = r(32),
          i = r(29),
          o = r(30),
          a = r(58),
          s = r(11),
          u = r(40),
          c = r(60),
          l = r(14),
          d = r(42),
          f = (r(0), r(36)),
          h = (r(3), function () {
        function e(e) {
          var r,
              n,
              a,
              s,
              l,
              f = this;
          this.configName = e.configName;
          var h = e.handlerProvider ? e.handlerProvider : i,
              p = e.operationLoader;
          this._operationLoader = p, this._network = e.network, this._getDataID = null !== (r = e.UNSTABLE_DO_NOT_USE_getDataID) && void 0 !== r ? r : d, this._publishQueue = null !== (n = e.publishQueue) && void 0 !== n ? n : new c(e.store, h, this._getDataID), this._scheduler = null !== (a = e.scheduler) && void 0 !== a ? a : null, this._store = e.store, this.__setNet = function (e) {
            return f._network = e;
          };

          var _ = void 0 !== t ? t : "undefined" != typeof window ? window : void 0,
              v = _ && _.__RELAY_DEVTOOLS_HOOK__;

          v && v.registerEnvironment(this), this._missingFieldHandlers = null !== (s = e.missingFieldHandlers) && void 0 !== s ? s : o, this._operationTracker = null !== (l = e.operationTracker) && void 0 !== l ? l : new u();
        }

        var r = e.prototype;
        return r.getStore = function () {
          return this._store;
        }, r.getNetwork = function () {
          return this._network;
        }, r.getOperationTracker = function () {
          return this._operationTracker;
        }, r.applyUpdate = function (e) {
          var t = this;
          return this._publishQueue.applyUpdate(e), this._publishQueue.run(), {
            dispose: function () {
              t._publishQueue.revertUpdate(e), t._publishQueue.run();
            }
          };
        }, r.revertUpdate = function (e) {
          this._publishQueue.revertUpdate(e), this._publishQueue.run();
        }, r.replaceUpdate = function (e, t) {
          this._publishQueue.revertUpdate(e), this._publishQueue.applyUpdate(t), this._publishQueue.run();
        }, r.applyMutation = function (e) {
          var t = this,
              r = s.create(function (r) {
            var n = s.create(function (e) {}),
                i = a.execute({
              operation: e.operation,
              operationLoader: t._operationLoader,
              optimisticConfig: e,
              publishQueue: t._publishQueue,
              scheduler: t._scheduler,
              sink: r,
              source: n,
              updater: null,
              operationTracker: t._operationTracker,
              getDataID: t._getDataID
            });
            return function () {
              return i.cancel();
            };
          }).subscribe({});
          return {
            dispose: function () {
              return r.unsubscribe();
            }
          };
        }, r.check = function (e) {
          return null == this._missingFieldHandlers ? this._store.check(e) : this._checkSelectorAndHandleMissingFields(e, this._missingFieldHandlers);
        }, r.commitPayload = function (e, t) {
          var r = f(e.root, t, null, {
            getDataID: this._getDataID,
            request: e.request
          });
          this._publishQueue.commitPayload(e, r), this._publishQueue.run();
        }, r.commitUpdate = function (e) {
          this._publishQueue.commitUpdate(e), this._publishQueue.run();
        }, r.lookup = function (e) {
          return this._store.lookup(e);
        }, r.subscribe = function (e, t) {
          return this._store.subscribe(e, t);
        }, r.retain = function (e) {
          return this._store.retain(e);
        }, r._checkSelectorAndHandleMissingFields = function (e, t) {
          var r = l.create(),
              i = n.check(this._store.getSource(), r, e, t, this._operationLoader, this._getDataID);
          return r.size() > 0 && (this._publishQueue.commitSource(r), this._publishQueue.run()), i;
        }, r.execute = function (e) {
          var t = this,
              r = e.operation,
              n = e.cacheConfig,
              i = e.updater;
          return s.create(function (e) {
            var o = t._network.execute(r.request.node.params, r.request.variables, n || {}),
                s = a.execute({
              operation: r,
              operationLoader: t._operationLoader,
              optimisticConfig: null,
              publishQueue: t._publishQueue,
              scheduler: t._scheduler,
              sink: e,
              source: o,
              updater: i,
              operationTracker: t._operationTracker,
              getDataID: t._getDataID
            });

            return function () {
              return s.cancel();
            };
          });
        }, r.executeMutation = function (e) {
          var t = this,
              r = e.operation,
              n = e.optimisticResponse,
              i = e.optimisticUpdater,
              o = e.updater,
              u = e.uploadables;
          return s.create(function (e) {
            var s;
            (n || i) && (s = {
              operation: r,
              response: n,
              updater: i
            });

            var c = t._network.execute(r.request.node.params, r.request.variables, {
              force: !0
            }, u),
                l = a.execute({
              operation: r,
              operationLoader: t._operationLoader,
              optimisticConfig: s,
              publishQueue: t._publishQueue,
              scheduler: t._scheduler,
              sink: e,
              source: c,
              updater: o,
              operationTracker: t._operationTracker,
              getDataID: t._getDataID
            });

            return function () {
              return l.cancel();
            };
          });
        }, r.executeWithSource = function (e) {
          var t = this,
              r = e.operation,
              n = e.source;
          return s.create(function (e) {
            var i = a.execute({
              operation: r,
              operationLoader: t._operationLoader,
              operationTracker: t._operationTracker,
              optimisticConfig: null,
              publishQueue: t._publishQueue,
              scheduler: t._scheduler,
              sink: e,
              source: n,
              getDataID: t._getDataID
            });
            return function () {
              return i.cancel();
            };
          });
        }, r.sendQuery = function (e) {
          var t = e.cacheConfig,
              r = e.onCompleted,
              n = e.onError,
              i = e.onNext,
              o = e.operation;
          return this.execute({
            operation: o,
            cacheConfig: t
          }).subscribeLegacy({
            onNext: i,
            onError: n,
            onCompleted: r
          });
        }, r.sendMutation = function (e) {
          var t = e.onCompleted,
              r = e.onError,
              n = e.operation,
              i = e.optimisticResponse,
              o = e.optimisticUpdater,
              a = e.updater,
              s = e.uploadables;
          return this.executeMutation({
            operation: n,
            optimisticResponse: i,
            optimisticUpdater: o,
            updater: a,
            uploadables: s
          }).subscribeLegacy({
            onNext: function (e) {
              t && t(e.errors);
            },
            onError: r,
            onCompleted: t
          });
        }, r.toJSON = function () {
          var e;
          return "RelayModernEnvironment(".concat(null !== (e = this.configName) && void 0 !== e ? e : "", ")");
        }, e;
      }());
      h.prototype["@@RelayModernEnvironment"] = !0, e.exports = h;
    }).call(this, r(52));
  }, function (e, t) {
    var r;

    r = function () {
      return this;
    }();

    try {
      r = r || new Function("return this")();
    } catch (e) {
      "object" == typeof window && (r = window);
    }

    e.exports = r;
  }, function (e, t, r) {
    "use strict";

    var n = r(0),
        i = r(7).generateClientID,
        o = r(1).getStableStorageKey,
        a = function () {
      function e(e, t, r) {
        this._dataID = r, this._mutator = t, this._source = e;
      }

      var t = e.prototype;
      return t.copyFieldsFrom = function (e) {
        this._mutator.copyFields(e.getDataID(), this._dataID);
      }, t.getDataID = function () {
        return this._dataID;
      }, t.getType = function () {
        var e = this._mutator.getType(this._dataID);

        return null == e && n(!1), e;
      }, t.getValue = function (e, t) {
        var r = o(e, t);
        return this._mutator.getValue(this._dataID, r);
      }, t.setValue = function (e, t, r) {
        s(e) || n(!1);
        var i = o(t, r);
        return this._mutator.setValue(this._dataID, i, e), this;
      }, t.getLinkedRecord = function (e, t) {
        var r = o(e, t),
            n = this._mutator.getLinkedRecordID(this._dataID, r);

        return null != n ? this._source.get(n) : n;
      }, t.setLinkedRecord = function (t, r, i) {
        t instanceof e || n(!1);
        var a = o(r, i),
            s = t.getDataID();
        return this._mutator.setLinkedRecordID(this._dataID, a, s), this;
      }, t.getOrCreateLinkedRecord = function (e, t, r) {
        var n = this.getLinkedRecord(e, r);

        if (!n) {
          var a,
              s = o(e, r),
              u = i(this.getDataID(), s);
          n = null !== (a = this._source.get(u)) && void 0 !== a ? a : this._source.create(u, t), this.setLinkedRecord(n, e, r);
        }

        return n;
      }, t.getLinkedRecords = function (e, t) {
        var r = this,
            n = o(e, t),
            i = this._mutator.getLinkedRecordIDs(this._dataID, n);

        return null == i ? i : i.map(function (e) {
          return null != e ? r._source.get(e) : e;
        });
      }, t.setLinkedRecords = function (e, t, r) {
        Array.isArray(e) || n(!1);
        var i = o(t, r),
            a = e.map(function (e) {
          return e && e.getDataID();
        });
        return this._mutator.setLinkedRecordIDs(this._dataID, i, a), this;
      }, e;
    }();

    function s(e) {
      return null == e || "object" != typeof e || Array.isArray(e) && e.every(s);
    }

    e.exports = a;
  }, function (e, t, r) {
    "use strict";

    var n = r(13),
        i = n.EXISTENT,
        o = n.NONEXISTENT,
        a = n.UNKNOWN,
        s = function () {
      function e(e) {
        var t = this;
        this._records = new Map(), null != e && Object.keys(e).forEach(function (r) {
          t._records.set(r, e[r]);
        });
      }

      var t = e.prototype;
      return t.clear = function () {
        this._records = new Map();
      }, t.delete = function (e) {
        this._records.set(e, null);
      }, t.get = function (e) {
        return this._records.get(e);
      }, t.getRecordIDs = function () {
        return Array.from(this._records.keys());
      }, t.getStatus = function (e) {
        return this._records.has(e) ? null == this._records.get(e) ? o : i : a;
      }, t.has = function (e) {
        return this._records.has(e);
      }, t.load = function (e, t) {
        t(null, this.get(e));
      }, t.remove = function (e) {
        this._records.delete(e);
      }, t.set = function (e, t) {
        this._records.set(e, t);
      }, t.size = function () {
        return this._records.size;
      }, t.toJSON = function () {
        var e = {},
            t = !0,
            r = !1,
            n = void 0;

        try {
          for (var i, o = this._records[Symbol.iterator](); !(t = (i = o.next()).done); t = !0) {
            var a = i.value,
                s = a[0],
                u = a[1];
            e[s] = u;
          }
        } catch (e) {
          r = !0, n = e;
        } finally {
          try {
            t || null == o.return || o.return();
          } finally {
            if (r) throw n;
          }
        }

        return e;
      }, e;
    }();

    e.exports = s;
  }, function (e, t, r) {
    "use strict";

    var n = r(13),
        i = n.EXISTENT,
        o = n.NONEXISTENT,
        a = n.UNKNOWN,
        s = function () {
      function e(e) {
        this._records = e || {};
      }

      var t = e.prototype;
      return t.clear = function () {
        this._records = {};
      }, t.delete = function (e) {
        this._records[e] = null;
      }, t.get = function (e) {
        return this._records[e];
      }, t.getRecordIDs = function () {
        return Object.keys(this._records);
      }, t.getStatus = function (e) {
        return this._records.hasOwnProperty(e) ? null == this._records[e] ? o : i : a;
      }, t.has = function (e) {
        return this._records.hasOwnProperty(e);
      }, t.load = function (e, t) {
        t(null, this.get(e));
      }, t.remove = function (e) {
        delete this._records[e];
      }, t.set = function (e, t) {
        this._records[e] = t;
      }, t.size = function () {
        return Object.keys(this._records).length;
      }, t.toJSON = function () {
        return this._records;
      }, e;
    }();

    e.exports = s;
  }, function (e, t) {
    e.exports = c;
  }, function (e, t) {
    e.exports = l;
  }, function (e, t, r) {
    "use strict";

    var n = r(2),
        i = n(r(4)),
        o = n(r(10)),
        a = r(31),
        s = r(6),
        u = r(11),
        c = r(14),
        l = r(37),
        d = r(0),
        f = r(8),
        h = (r(3), r(7).generateClientID),
        p = r(9).createNormalizationSelector,
        _ = r(1),
        v = _.ROOT_TYPE,
        g = _.TYPENAME_KEY,
        m = _.getStorageKey;

    var b = function () {
      function e(e) {
        var t = this,
            r = e.operation,
            n = e.operationLoader,
            i = e.optimisticConfig,
            o = e.publishQueue,
            a = e.scheduler,
            s = e.sink,
            u = e.source,
            c = e.updater,
            l = e.operationTracker,
            d = e.getDataID;
        this._incrementalResults = new Map(), this._nextSubscriptionId = 0, this._operation = r, this._operationLoader = n, this._optimisticUpdates = null, this._publishQueue = o, this._scheduler = a, this._sink = s, this._source = new Map(), this._state = "started", this._updater = c, this._subscriptions = new Map(), this._operationTracker = l, this._getDataID = d;
        var f = this._nextSubscriptionId++;
        u.subscribe({
          complete: function () {
            return t._complete(f);
          },
          error: function (e) {
            return t._error(e);
          },
          next: function (e) {
            try {
              t._next(f, e);
            } catch (e) {
              s.error(e);
            }
          },
          start: function (e) {
            return t._start(f, e);
          }
        }), null != i && this._processOptimisticResponse(null != i.response ? {
          data: i.response
        } : null, i.updater);
      }

      var t = e.prototype;
      return t.cancel = function () {
        var e = this;

        if ("completed" !== this._state) {
          this._state = "completed", 0 !== this._subscriptions.size && (this._subscriptions.forEach(function (e) {
            return e.unsubscribe();
          }), this._subscriptions.clear());
          var t = this._optimisticUpdates;
          null !== t && (this._optimisticUpdates = null, t.forEach(function (t) {
            return e._publishQueue.revertUpdate(t);
          }), this._publishQueue.run()), this._incrementalResults.clear(), this._completeOperationTracker();
        }
      }, t._schedule = function (e) {
        var t = this,
            r = this._scheduler;

        if (null != r) {
          var n = this._nextSubscriptionId++;
          u.create(function (t) {
            var n = r.schedule(function () {
              try {
                e(), t.complete();
              } catch (e) {
                t.error(e);
              }
            });
            return function () {
              return r.cancel(n);
            };
          }).subscribe({
            complete: function () {
              return t._complete(n);
            },
            error: function (e) {
              return t._error(e);
            },
            start: function (e) {
              return t._start(n, e);
            }
          });
        } else e();
      }, t._complete = function (e) {
        this._subscriptions.delete(e), 0 === this._subscriptions.size && (this.cancel(), this._sink.complete());
      }, t._error = function (e) {
        this.cancel(), this._sink.error(e);
      }, t._start = function (e, t) {
        this._subscriptions.set(e, t);
      }, t._next = function (e, t) {
        var r = this;

        this._schedule(function () {
          r._handleNext(t);
        });
      }, t._handleNext = function (e) {
        var t, r;

        if ("completed" !== this._state) {
          if (null == e.data) {
            var n = e.errors,
                i = a.create("RelayNetwork", "No data returned for operation `%s`, got error(s):\n%s\n\nSee the error `source` property for more information.", this._operation.request.node.params.name, n ? n.map(function (e) {
              return e.message;
            }).join("\n") : "(No errors)");
            throw i.source = {
              errors: n,
              operation: this._operation.request.node,
              variables: this._operation.request.variables
            }, i;
          }

          var o = e,
              s = !0 === (null === (t = e.extensions) || void 0 === t ? void 0 : t.isOptimistic);
          s && "started" !== this._state && d(!1);
          var u = !0 === (null === (r = e.extensions) || void 0 === r ? void 0 : r.is_final);
          if (this._state = u ? "loading_final" : "loading_incremental", s) this._processOptimisticResponse(o, null);else {
            var c = e.path,
                l = e.label;
            null != c || null != l ? "string" == typeof l && Array.isArray(c) ? this._processIncrementalResponse({
              path: c,
              label: l,
              response: o
            }) : d(!1) : this._processResponse(o);
          }

          this._sink.next(e);
        }
      }, t._processOptimisticResponse = function (e, t) {
        var r = this;

        if (null !== this._optimisticUpdates && d(!1), null != e || null != t) {
          var n = [];

          if (e) {
            var i = y(e, this._operation.root, v, {
              getDataID: this._getDataID,
              path: [],
              request: this._operation.request
            });

            if (E(i), n.push({
              operation: this._operation,
              payload: i,
              updater: t
            }), i.moduleImportPayloads && i.moduleImportPayloads.length) {
              var a = i.moduleImportPayloads,
                  s = this._operationLoader;

              for (s || d(!1); a.length;) {
                var u = a.shift(),
                    l = s.get(u.operationReference);

                if (null != l) {
                  var f = p(l, u.dataID, u.variables),
                      h = y({
                    data: u.data
                  }, f, u.typeName, {
                    getDataID: this._getDataID,
                    path: u.path,
                    request: this._operation.request
                  });
                  E(h), n.push({
                    operation: this._operation,
                    payload: h,
                    updater: null
                  }), h.moduleImportPayloads && a.push.apply(a, (0, o.default)(h.moduleImportPayloads));
                }
              }
            }
          } else t && n.push({
            operation: this._operation,
            payload: {
              connectionEvents: null,
              errors: null,
              fieldPayloads: null,
              incrementalPlaceholders: null,
              moduleImportPayloads: null,
              source: new c()
            },
            updater: t
          });

          this._optimisticUpdates = n, n.forEach(function (e) {
            return r._publishQueue.applyUpdate(e);
          });

          var _ = this._publishQueue.run();

          this._updateOperationTracker(_);
        }
      }, t._processResponse = function (e) {
        var t = this;
        null !== this._optimisticUpdates && (this._optimisticUpdates.forEach(function (e) {
          return t._publishQueue.revertUpdate(e);
        }), this._optimisticUpdates = null);
        var r = y(e, this._operation.root, v, {
          getDataID: this._getDataID,
          path: [],
          request: this._operation.request
        });
        this._incrementalResults.clear(), this._source.clear(), this._publishQueue.commitPayload(this._operation, r, this._updater);

        var n = this._publishQueue.run();

        this._updateOperationTracker(n), this._processPayloadFollowups(r);
      }, t._processPayloadFollowups = function (e) {
        var t = this;

        if ("completed" !== this._state) {
          var r = e.incrementalPlaceholders,
              n = e.moduleImportPayloads;

          if (n && 0 !== n.length) {
            var i = this._operationLoader;
            i || d(!1), n.forEach(function (e) {
              t._processModuleImportPayload(e, i);
            });
          }

          r && 0 !== r.length && (r.forEach(function (r) {
            t._processIncrementalPlaceholder(e, r);
          }), "loading_final" === this._state && r.forEach(function (e) {
            "defer" === e.kind && t._processDeferResponse(e.label, e.path, e, {
              data: e.data
            });
          }));
        }
      }, t._processModuleImportPayload = function (e, t) {
        var r = this,
            n = t.get(e.operationReference);
        if (null != n) this._schedule(function () {
          r._handleModuleImportPayload(e, n);
        });else {
          var i = this._nextSubscriptionId++;
          u.from(new Promise(function (r, n) {
            t.load(e.operationReference).then(r, n);
          })).map(function (t) {
            null != t && r._schedule(function () {
              r._handleModuleImportPayload(e, t);
            });
          }).subscribe({
            complete: function () {
              return r._complete(i);
            },
            error: function (e) {
              return r._error(e);
            },
            start: function (e) {
              return r._start(i, e);
            }
          });
        }
      }, t._handleModuleImportPayload = function (e, t) {
        var r = p(t, e.dataID, e.variables),
            n = y({
          data: e.data
        }, r, e.typeName, {
          getDataID: this._getDataID,
          path: e.path,
          request: this._operation.request
        });

        this._publishQueue.commitPayload(this._operation, n);

        var i = this._publishQueue.run();

        this._updateOperationTracker(i), this._processPayloadFollowups(n);
      }, t._processIncrementalPlaceholder = function (e, t) {
        var r,
            n = this,
            i = t.label,
            o = t.path.map(String).join("."),
            a = this._incrementalResults.get(i);

        null == a && (a = new Map(), this._incrementalResults.set(i, a));
        var u,
            c = a.get(o),
            l = null != c && "response" === c.kind ? c.responses : null;
        a.set(o, {
          kind: "placeholder",
          placeholder: t
        }), u = "stream" === t.kind ? t.parentID : t.selector.dataID;

        var p,
            _,
            v = e.source.get(u),
            g = (null !== (r = e.fieldPayloads) && void 0 !== r ? r : []).filter(function (e) {
          var t = h(e.dataID, e.fieldKey);
          return e.dataID === u || t === u;
        });

        null == v && d(!1);

        var m = this._source.get(u);

        if (null != m) {
          p = s.update(m.record, v);

          var b = new Map(),
              y = function (e) {
            var t,
                r,
                n = (t = e, null !== (r = JSON.stringify(f(t))) && void 0 !== r ? r : "");
            b.set(n, e);
          };

          m.fieldPayloads.forEach(y), g.forEach(y), _ = Array.from(b.values());
        } else p = v, _ = g;

        this._source.set(u, {
          record: p,
          fieldPayloads: _
        }), null != l && l.forEach(function (e) {
          n._schedule(function () {
            n._processIncrementalResponse(e);
          });
        });
      }, t._processIncrementalResponse = function (e) {
        var t = e.label,
            r = e.path,
            n = e.response,
            i = this._incrementalResults.get(t);

        if (null == i && (i = new Map(), this._incrementalResults.set(t, i)), -1 !== t.indexOf("$defer$")) {
          var o = r.map(String).join("."),
              a = i.get(o);
          if (null == a) return a = {
            kind: "response",
            responses: [e]
          }, void i.set(o, a);
          if ("response" === a.kind) return void a.responses.push(e);
          var s = a.placeholder;
          "defer" !== s.kind && d(!1), this._processDeferResponse(t, r, s, n);
        } else {
          var u = r.slice(0, -2).map(String).join("."),
              c = i.get(u);
          if (null == c) return c = {
            kind: "response",
            responses: [e]
          }, void i.set(u, c);
          if ("response" === c.kind) return void c.responses.push(e);
          var l = c.placeholder;
          "stream" !== l.kind && d(!1), this._processStreamResponse(t, r, l, n);
        }
      }, t._processDeferResponse = function (e, t, r, n) {
        var i = r.selector.dataID,
            o = y(n, r.selector, r.typeName, {
          getDataID: this._getDataID,
          path: r.path,
          request: this._operation.request
        });

        this._publishQueue.commitPayload(this._operation, o);

        var a = this._source.get(i);

        null == a && d(!1);
        var s = a.fieldPayloads;

        if (0 !== s.length) {
          var u = {
            connectionEvents: null,
            errors: null,
            fieldPayloads: s,
            incrementalPlaceholders: null,
            moduleImportPayloads: null,
            source: c.create()
          };

          this._publishQueue.commitPayload(this._operation, u);
        }

        var l = this._publishQueue.run();

        this._updateOperationTracker(l), this._processPayloadFollowups(o);
      }, t._processStreamResponse = function (e, t, r, n) {
        var i,
            a,
            u,
            l = r.parentID,
            f = r.node,
            _ = r.variables,
            v = n.data;
        "object" != typeof v && d(!1);
        var b = f.selections[0];
        (null == b || "LinkedField" !== b.kind || !0 !== b.plural) && d(!1);

        var E = null !== (i = b.alias) && void 0 !== i ? i : b.name,
            D = m(b, _),
            R = this._source.get(l);

        null == R && d(!1);
        var I = R.record,
            S = R.fieldPayloads,
            k = s.getLinkedRecordIDs(I, D);
        null == k && d(!1);
        var O = t[t.length - 1],
            N = parseInt(O, 10);
        N === O && N >= 0 || d(!1);
        var L = null !== (a = b.concreteType) && void 0 !== a ? a : v[g];
        "string" != typeof L && d(!1);
        var P = (null !== (u = this._getDataID(v, L)) && void 0 !== u ? u : k && k[N]) || h(l, D, N);
        "string" != typeof P && d(!1);
        var T = p(b, P, _),
            F = s.clone(I),
            A = (0, o.default)(k);
        A[N] = P, s.setLinkedRecordIDs(F, D, A), this._source.set(l, {
          record: F,
          fieldPayloads: S
        });
        var w = y(n, T, L, {
          getDataID: this._getDataID,
          path: [].concat((0, o.default)(r.path), [E, String(N)]),
          request: this._operation.request
        });

        if (this._publishQueue.commitPayload(this._operation, w, function (e) {
          var t = e.get(l);

          if (null != t) {
            var r = t.getLinkedRecords(D);

            if (null != r && r.length === k.length && !r.some(function (e, t) {
              return k[t] !== (e && e.getDataID());
            })) {
              var n = (0, o.default)(r);
              n[N] = e.get(P), t.setLinkedRecords(n, D);
            }
          }
        }), 0 !== S.length) {
          var x = {
            connectionEvents: null,
            errors: null,
            fieldPayloads: S,
            incrementalPlaceholders: null,
            moduleImportPayloads: null,
            source: c.create()
          };

          this._publishQueue.commitPayload(this._operation, x);
        }

        var C = this._publishQueue.run();

        this._updateOperationTracker(C), this._processPayloadFollowups(w);
      }, t._updateOperationTracker = function (e) {
        null != this._operationTracker && null != e && e.length > 0 && this._operationTracker.update(this._operation.request, new Set(e));
      }, t._completeOperationTracker = function () {
        null != this._operationTracker && this._operationTracker.complete(this._operation.request);
      }, e;
    }();

    function y(e, t, r, n) {
      var o = e.data,
          a = e.errors,
          u = c.create(),
          d = s.create(t.dataID, r);
      u.set(t.dataID, d);
      var f = l.normalize(u, t, o, n);
      return (0, i.default)({}, f, {
        errors: a
      });
    }

    function E(e) {
      var t = e.incrementalPlaceholders;
      null != t && 0 !== t.length && d(!1);
    }

    e.exports = {
      execute: function (e) {
        return new b(e);
      }
    };
  }, function (e, t, r) {
    "use strict";

    e.exports = function (e) {
      return !!e && "function" == typeof e.then;
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(61),
        i = r(41),
        o = r(14),
        a = r(33),
        s = r(34),
        u = r(35),
        c = r(0),
        l = function () {
      function e(e, t, r) {
        this._backup = o.create(), this._handlerProvider = t || null, this._pendingBackupRebase = !1, this._pendingUpdaters = new Set(), this._pendingData = new Set(), this._pendingOptimisticUpdates = new Set(), this._store = e, this._appliedOptimisticUpdates = new Set(), this._gcHold = null, this._getDataID = r;
      }

      var t = e.prototype;
      return t.applyUpdate = function (e) {
        (this._appliedOptimisticUpdates.has(e) || this._pendingOptimisticUpdates.has(e)) && c(!1), this._pendingOptimisticUpdates.add(e);
      }, t.revertUpdate = function (e) {
        this._pendingOptimisticUpdates.has(e) ? this._pendingOptimisticUpdates.delete(e) : this._appliedOptimisticUpdates.has(e) && (this._pendingBackupRebase = !0, this._appliedOptimisticUpdates.delete(e));
      }, t.revertAll = function () {
        this._pendingBackupRebase = !0, this._pendingOptimisticUpdates.clear(), this._appliedOptimisticUpdates.clear();
      }, t.commitPayload = function (e, t, r) {
        this._pendingBackupRebase = !0, this._pendingData.add({
          kind: "payload",
          operation: e,
          payload: t,
          updater: r
        });
      }, t.commitUpdate = function (e) {
        this._pendingBackupRebase = !0, this._pendingUpdaters.add(e);
      }, t.commitSource = function (e) {
        this._pendingBackupRebase = !0, this._pendingData.add({
          kind: "source",
          source: e
        });
      }, t.run = function () {
        return this._pendingBackupRebase && this._backup.size() && (this._store.publish(this._backup), this._backup = o.create()), this._commitData(), this._commitUpdaters(), this._applyUpdates(), this._pendingBackupRebase = !1, this._appliedOptimisticUpdates.size > 0 ? this._gcHold || (this._gcHold = this._store.holdGC()) : this._gcHold && (this._gcHold.dispose(), this._gcHold = null), this._store.notify();
      }, t._getSourceFromPayload = function (e) {
        var t = this,
            r = e.payload,
            n = e.operation,
            i = e.updater,
            o = r.source,
            l = r.fieldPayloads,
            f = new a(this._store.getSource(), o),
            h = new s(f, this._getDataID);

        if (l && l.length && l.forEach(function (e) {
          var r = t._handlerProvider && t._handlerProvider(e.handle);

          r || c(!1), r.update(h, e);
        }), i) {
          var p = n.fragment;
          null == p && c(!1), i(new u(h, p), d(o, p));
        }

        return o;
      }, t._commitData = function () {
        var e = this;
        this._pendingData.size && (this._pendingData.forEach(function (t) {
          if ("payload" === t.kind) {
            var r = e._getSourceFromPayload(t);

            e._store.publish(r), t.payload.connectionEvents && e._store.publishConnectionEvents_UNSTABLE(t.payload.connectionEvents);
          } else {
            var n = t.source;

            e._store.publish(n);
          }
        }), this._pendingData.clear());
      }, t._commitUpdaters = function () {
        var e = this;

        if (this._pendingUpdaters.size) {
          var t = o.create();
          this._pendingUpdaters.forEach(function (r) {
            var i = new a(e._store.getSource(), t),
                o = new s(i, e._getDataID);
            n.applyWithGuard(r, null, [o], null, "RelayPublishQueue:commitUpdaters");
          }), this._store.publish(t), this._pendingUpdaters.clear();
        }
      }, t._applyUpdates = function () {
        var e = this;

        if (this._pendingOptimisticUpdates.size || this._pendingBackupRebase && this._appliedOptimisticUpdates.size) {
          var t = o.create(),
              r = new a(this._store.getSource(), t, this._backup),
              i = new s(r, this._getDataID, this._handlerProvider);
          this._pendingBackupRebase && this._appliedOptimisticUpdates.size && this._appliedOptimisticUpdates.forEach(function (e) {
            if (e.storeUpdater) {
              var t = e.storeUpdater;
              n.applyWithGuard(t, null, [i], null, "RelayPublishQueue:applyUpdates");
            } else {
              var r,
                  o = e.operation,
                  a = e.payload,
                  s = e.updater,
                  c = a.source,
                  l = a.fieldPayloads,
                  f = new u(i, o.fragment);
              c && (i.publishSource(c, l), r = d(c, o.fragment)), s && n.applyWithGuard(s, null, [f, r], null, "RelayPublishQueue:applyUpdates");
            }
          }), this._pendingOptimisticUpdates.size && (this._pendingOptimisticUpdates.forEach(function (t) {
            if (t.storeUpdater) {
              var r = t.storeUpdater;
              n.applyWithGuard(r, null, [i], null, "RelayPublishQueue:applyUpdates");
            } else {
              var o,
                  a = t.operation,
                  s = t.payload,
                  c = t.updater,
                  l = s.source,
                  f = s.fieldPayloads,
                  h = new u(i, a.fragment);
              l && (i.publishSource(l, f), o = d(l, a.fragment)), c && n.applyWithGuard(c, null, [h, o], null, "RelayPublishQueue:applyUpdates");
            }

            e._appliedOptimisticUpdates.add(t);
          }), this._pendingOptimisticUpdates.clear()), this._store.publish(t);
        }
      }, e;
    }();

    function d(e, t) {
      return i.read(e, t).data;
    }

    e.exports = l;
  }, function (e, t) {
    e.exports = d;
  }, function (e, t, r) {
    "use strict";

    var n = r(0),
        i = r(8);

    e.exports = function (e, t) {
      var r = null != e.id ? e.id : e.text;
      return null == r && n(!1), r + JSON.stringify(i(t));
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(2)(r(4)),
        i = r(32),
        o = r(25),
        a = r(6),
        s = r(26),
        u = r(41),
        c = r(64),
        l = (r(19), r(42)),
        d = r(65),
        f = r(0),
        h = r(45),
        p = r(66),
        _ = r(9).createReaderSelector,
        v = r(1).UNPUBLISH_RECORD_SENTINEL,
        g = function () {
      function e(e) {
        var t,
            r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p,
            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
            i = arguments.length > 3 ? arguments[3] : void 0;
        this._connectionEvents = new Map(), this._connectionSubscriptions = new Set(), this._gcScheduler = r, this._hasScheduledGC = !1, this._index = 0, this._operationLoader = n, this._pendingConnectionEvents = new Map(), this._recordSource = e, this._roots = new Map(), this._subscriptions = new Set(), this._updatedConnectionIDs = {}, this._updatedRecordIDs = {}, this._gcHoldCounter = 0, this._shouldScheduleGC = !1, this._getDataID = null !== (t = i) && void 0 !== t ? t : l;
      }

      var t = e.prototype;
      return t.getSource = function () {
        return this._recordSource;
      }, t.check = function (e) {
        return i.check(this._recordSource, this._recordSource, e, [], this._operationLoader, this._getDataID);
      }, t.retain = function (e) {
        var t = this,
            r = this._index++;
        return this._roots.set(r, e), {
          dispose: function () {
            t._roots.delete(r), t._scheduleGC();
          }
        };
      }, t.lookup = function (e) {
        return u.read(this._recordSource, e);
      }, t.notify = function () {
        var e = this,
            t = [];
        return this._subscriptions.forEach(function (r) {
          var n = e._updateSubscription(r);

          null != n && t.push(n);
        }), this._connectionSubscriptions.forEach(function (t) {
          e._updateConnection(t);
        }), this._pendingConnectionEvents.forEach(function (t, r) {
          var n = e._connectionEvents.get(r);

          null == n ? e._connectionEvents.set(r, t) : e._connectionEvents.set(r, n.concat(t));
        }), this._updatedConnectionIDs = {}, this._updatedRecordIDs = {}, t;
      }, t.publish = function (e) {
        !function (e, t, r) {
          for (var n = t.getRecordIDs(), i = 0; i < n.length; i++) {
            var o = n[i],
                s = t.get(o),
                u = e.get(o);
            if (s === v) e.remove(o), r[o] = !0;else if (s && u) {
              var c = a.update(u, s);
              c !== u && (r[o] = !0, e.set(o, c));
            } else null === s ? (e.delete(o), null !== u && (r[o] = !0)) : s && (e.set(o, s), r[o] = !0);
          }
        }(this._recordSource, e, this._updatedRecordIDs);
      }, t.publishConnectionEvents_UNSTABLE = function (e) {
        var t = this;
        0 !== e.length && (o.ENABLE_CONNECTION_RESOLVERS || f(!1), e.forEach(function (e) {
          var r = t._pendingConnectionEvents.get(e.connectionID);

          null == r && (r = [], t._pendingConnectionEvents.set(e.connectionID, r)), r.push(e);
        }));
      }, t.subscribe = function (e, t) {
        var r = this,
            n = {
          callback: t,
          snapshot: e
        };
        return this._subscriptions.add(n), {
          dispose: function () {
            r._subscriptions.delete(n);
          }
        };
      }, t.holdGC = function () {
        var e = this;
        this._gcHoldCounter++;
        return {
          dispose: function () {
            e._gcHoldCounter > 0 && (e._gcHoldCounter--, 0 === e._gcHoldCounter && e._shouldScheduleGC && (e._scheduleGC(), e._shouldScheduleGC = !1));
          }
        };
      }, t.lookupConnection_UNSTABLE = function (e) {
        var t,
            r = this;
        o.ENABLE_CONNECTION_RESOLVERS || f(!1);

        var n = e.edgeField,
            i = e.id,
            a = e.resolver,
            s = e.variables,
            c = a.initialize(),
            l = this._connectionEvents.get(i);

        if (null == l) return {
          id: i,
          reference: e,
          seenRecords: {},
          state: c
        };
        var d = {
          kind: "Fragment",
          name: n.name,
          type: null !== (t = n.concreteType) && void 0 !== t ? t : "__Any",
          metadata: null,
          argumentDefinitions: [],
          selections: n.selections
        },
            h = {},
            p = l.reduce(function (e, t) {
          if ("fetch" === t.kind) {
            var n = t.edgeIDs.map(function (e) {
              if (null == e) return e;
              var n = u.read(r._recordSource, _(d, e, s, t.request));
              return Object.assign(h, n.seenRecords), n.data;
            });
            return a.reduce(e, {
              kind: "fetch",
              args: t.args,
              edges: n,
              pageInfo: t.pageInfo
            });
          }

          if ("insert" === t.kind) {
            var i = u.read(r._recordSource, _(d, t.edgeID, s, t.request));
            return Object.assign(h, i.seenRecords), a.reduce(e, {
              kind: "insert",
              args: t.args,
              edge: i.data
            });
          }

          t.kind, f(!1);
        }, c);
        return {
          id: i,
          reference: e,
          seenRecords: h,
          state: p
        };
      }, t.subscribeConnection_UNSTABLE = function (e, t) {
        var r = this;
        o.ENABLE_CONNECTION_RESOLVERS || f(!1);
        var n = {
          callback: t,
          snapshot: e
        };
        return this._connectionSubscriptions.add(n), {
          dispose: function () {
            r._connectionSubscriptions.delete(n);
          }
        };
      }, t.toJSON = function () {
        return "RelayModernStore()";
      }, t.__getUpdatedRecordIDs = function () {
        return this._updatedRecordIDs;
      }, t._updateSubscription = function (e) {
        var t = e.callback,
            r = e.snapshot;

        if (d(r.seenRecords, this._updatedRecordIDs)) {
          var i = u.read(this._recordSource, r.selector),
              o = h(r.data, i.data);
          return i = (0, n.default)({}, i, {
            data: o
          }), e.snapshot = i, i.data !== r.data ? (t(i), r.selector.owner) : void 0;
        }
      }, t._updateConnection = function (e) {
        var t = e.snapshot,
            r = e.callback;

        if (this._pendingConnectionEvents.has(t.reference.id) || d(t.seenRecords, this._updatedRecordIDs)) {
          var n = this.lookupConnection_UNSTABLE(t.reference),
              i = h(t.state, n.state);
          0, e.snapshot = n, i !== t.state && r(i);
        }
      }, t._scheduleGC = function () {
        var e = this;
        this._gcHoldCounter > 0 ? this._shouldScheduleGC = !0 : this._hasScheduledGC || (this._hasScheduledGC = !0, this._gcScheduler(function () {
          e.__gc(), e._hasScheduledGC = !1;
        }));
      }, t.__gc = function () {
        var e = this,
            t = new Set();
        if (this._roots.forEach(function (r) {
          c.mark(e._recordSource, r, t, e._operationLoader);
        }), t.size) for (var r = this._recordSource.getRecordIDs(), n = 0; n < r.length; n++) {
          var i = r[n];
          t.has(i) || this._recordSource.remove(i);
        } else this._recordSource.clear();
      }, e;
    }();

    s.instrumentMethods(g.prototype, {
      lookup: "RelayModernStore.prototype.lookup",
      notify: "RelayModernStore.prototype.notify",
      publish: "RelayModernStore.prototype.publish",
      __gc: "RelayModernStore.prototype.__gc"
    }), e.exports = g;
  }, function (e, t, r) {
    "use strict";

    var n = r(5),
        i = r(6),
        o = r(1),
        a = r(39),
        s = r(0),
        u = n.CONDITION,
        c = n.CLIENT_EXTENSION,
        l = n.DEFER,
        d = n.CONNECTION_FIELD,
        f = n.FRAGMENT_SPREAD,
        h = n.INLINE_FRAGMENT,
        p = n.LINKED_FIELD,
        _ = n.MODULE_IMPORT,
        v = n.LINKED_HANDLE,
        g = n.SCALAR_FIELD,
        m = n.SCALAR_HANDLE,
        b = n.STREAM,
        y = o.getStorageKey,
        E = o.getModuleOperationKey;

    var D = function () {
      function e(e, t, r, n) {
        var i;
        this._operationLoader = null !== (i = n) && void 0 !== i ? i : null, this._references = r, this._recordSource = e, this._variables = t;
      }

      var t = e.prototype;
      return t.mark = function (e, t) {
        this._traverse(e, t);
      }, t._traverse = function (e, t) {
        this._references.add(t);

        var r = this._recordSource.get(t);

        null != r && this._traverseSelections(e.selections, r);
      }, t._getVariableValue = function (e) {
        return this._variables.hasOwnProperty(e) || s(!1), this._variables[e];
      }, t._traverseSelections = function (e, t) {
        var r = this;
        e.forEach(function (n) {
          switch (n.kind) {
            case p:
              n.plural ? r._traversePluralLink(n, t) : r._traverseLink(n, t);
              break;

            case u:
              r._getVariableValue(n.condition) === n.passingValue && r._traverseSelections(n.selections, t);
              break;

            case h:
              var o = i.getType(t);
              null != o && o === n.type && r._traverseSelections(n.selections, t);
              break;

            case f:
              s(!1);

            case v:
              var y = a(n, e, r._variables);
              y.plural ? r._traversePluralLink(y, t) : r._traverseLink(y, t);
              break;

            case l:
            case b:
              r._traverseSelections(n.selections, t);

              break;

            case g:
            case m:
              break;

            case _:
              r._traverseModuleImport(n, t);

              break;

            case c:
              r._traverseSelections(n.selections, t);

              break;

            case d:
              s(!1);
              break;

            default:
              s(!1);
          }
        });
      }, t._traverseModuleImport = function (e, t) {
        var r = this._operationLoader;
        null === r && s(!1);
        var n = E(e.documentName),
            o = i.getValue(t, n);

        if (null != o) {
          var a = r.get(o);
          null != a && this._traverseSelections(a.selections, t);
        }
      }, t._traverseLink = function (e, t) {
        var r = y(e, this._variables),
            n = i.getLinkedRecordID(t, r);
        null != n && this._traverse(e, n);
      }, t._traversePluralLink = function (e, t) {
        var r = this,
            n = y(e, this._variables),
            o = i.getLinkedRecordIDs(t, n);
        null != o && o.forEach(function (t) {
          null != t && r._traverse(e, t);
        });
      }, e;
    }();

    e.exports = {
      mark: function (e, t, r, n) {
        var i = t.dataID,
            o = t.node,
            a = t.variables;
        new D(e, a, r, n).mark(o, i);
      }
    };
  }, function (e, t, r) {
    "use strict";

    e.exports = function (e, t) {
      for (var r = Object.keys(e), n = 0; n < r.length; n++) if (t.hasOwnProperty(r[n])) return !0;

      return !1;
    };
  }, function (e, t) {
    e.exports = f;
  }, function (e, t, r) {
    "use strict";

    var n = r(0),
        i = r(46),
        o = i.convertFetch,
        a = i.convertSubscribe;
    e.exports = {
      create: function (e, t) {
        var r = o(e),
            i = t ? a(t) : void 0;
        return {
          execute: function (e, t, o, a) {
            if ("subscription" === e.operationKind) return i || n(!1), a && n(!1), i(e, t, o);
            var s = o.poll;
            return null != s ? (a && n(!1), r(e, t, {
              force: !0
            }).poll(s)) : r(e, t, o, a);
          }
        };
      }
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(2),
        i = n(r(16)),
        o = n(r(10)),
        a = r(0),
        s = 1,
        u = function () {
      function e(e) {
        var t = e.request,
            r = e.variables,
            n = e.cacheConfig,
            o = e.uploadables;
        (0, i.default)(this, "_hasCommittedLogs", !1), (0, i.default)(this, "_logs", []), this._cacheConfig = n, this._id = s++, this._request = t, this._uploadables = o, this._variables = r, this._identifier = "[".concat(this._id, "] Relay Modern: ").concat(this._request.name);
      }

      var t = e.prototype;
      return t.addLog = function (e) {
        for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++) r[n - 1] = arguments[n];

        this._logs.push({
          label: e,
          values: r
        });
      }, t.clearLogs = function () {
        this._logs = [];
      }, t.timerStart = function () {
        console.time && console.time(this.getIdentifier());
      }, t.timerEnd = function () {
        console.timeEnd && console.timeEnd(this.getIdentifier());
      }, t.printLogs = function (e, t, r) {
        var n = this.getIdentifier();
        console.groupCollapsed && console.groupCollapsed("%c".concat(n), e ? "color:red" : ""), this.timerEnd(), this.getLogsToPrint(e, t, r).forEach(function (e) {
          var t,
              r = e.label,
              n = e.values;
          (t = console).log.apply(t, ["".concat(r, ":")].concat((0, o.default)(n)));
        }), console.groupEnd && console.groupEnd();
      }, t.commitLogs = function (e, t, r) {
        !1 !== this._hasCommittedLogs && a(!1), this.printLogs(e, t, r), this.markCommitted();
      }, t.markCommitted = function () {
        this._hasCommittedLogs = !0;
      }, t.flushLogs = function (e, t, r) {
        !1 !== this._hasCommittedLogs && a(!1), this.printLogs(e, t, r), this.clearLogs();
      }, t.getCacheConfig = function () {
        return this._cacheConfig;
      }, t.getIdentifier = function () {
        return this._identifier;
      }, t.getLogsToPrint = function (e, t, r) {
        return this._logs;
      }, t.getRequest = function () {
        return this._request;
      }, t.getUploadables = function () {
        return this._uploadables;
      }, t.getVariables = function () {
        return this._variables;
      }, e;
    }();

    e.exports = u;
  }, function (e, t, r) {
    "use strict";

    var n = r(2)(r(4)),
        i = r(0),
        o = r(8),
        a = function () {
      function e(e) {
        var t = e.size,
            r = e.ttl;
        t > 0 || i(!1), r > 0 || i(!1), this._responses = new Map(), this._size = t, this._ttl = r;
      }

      var t = e.prototype;
      return t.clear = function () {
        this._responses.clear();
      }, t.get = function (e, t) {
        var r = this,
            i = s(e, t);

        this._responses.forEach(function (e, t) {
          var n, i;
          n = e.fetchTime, i = r._ttl, n + i >= Date.now() || r._responses.delete(t);
        });

        var o = this._responses.get(i);

        return null != o ? (0, n.default)({}, o.payload, {
          extensions: (0, n.default)({}, o.payload.extensions, {
            cacheTimestamp: o.fetchTime
          })
        }) : null;
      }, t.set = function (e, t, r) {
        var n = Date.now(),
            i = s(e, t);

        if (this._responses.delete(i), this._responses.set(i, {
          fetchTime: n,
          payload: r
        }), this._responses.size > this._size) {
          var o = this._responses.keys().next();

          o.done || this._responses.delete(o.value);
        }
      }, e;
    }();

    function s(e, t) {
      return JSON.stringify(o({
        queryID: e,
        variables: t
      }));
    }

    e.exports = a;
  }, function (e, t, r) {
    "use strict";

    var n = r(17),
        i = r(0),
        o = r(27),
        a = r(15).getRequest,
        s = r(12).createOperationDescriptor;

    e.exports = function (e, t) {
      o(e) || i(!1);
      var r = a(t.mutation);
      if ("mutation" !== r.params.operationKind) throw new Error("commitMutation: Expected mutation operation");
      var u = t.optimisticUpdater,
          c = t.configs,
          l = t.optimisticResponse,
          d = t.variables,
          f = s(r, d);
      return c && (u = n.convert(c, r, u).optimisticUpdater), e.applyMutation({
        operation: f,
        response: l,
        updater: u
      });
    };
  }, function (e, t, r) {
    "use strict";

    e.exports = function (e, t) {
      e.commitUpdate(t);
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(2)(r(10)),
        i = r(17),
        o = r(0),
        a = r(27),
        s = (r(73), r(3), r(15).getRequest),
        u = r(12).createOperationDescriptor;

    e.exports = function (e, t) {
      a(e) || o(!1);
      var r = s(t.mutation);
      if ("mutation" !== r.params.operationKind) throw new Error("commitMutation: Expected mutation operation");
      if ("Request" !== r.kind) throw new Error("commitMutation: Expected mutation to be of type request");
      var c = t.optimisticResponse,
          l = t.optimisticUpdater,
          d = t.updater,
          f = t.configs,
          h = t.onError,
          p = t.variables,
          _ = t.uploadables,
          v = u(r, p);

      if ("function" == typeof c && (c = c()), f) {
        var g = i.convert(f, r, l, d);
        l = g.optimisticUpdater, d = g.updater;
      }

      var m = [];
      return {
        dispose: e.executeMutation({
          operation: v,
          optimisticResponse: c,
          optimisticUpdater: l,
          updater: d,
          uploadables: _
        }).subscribe({
          next: function (e) {
            e.errors && m.push.apply(m, (0, n.default)(e.errors));
          },
          complete: function () {
            var r = t.onCompleted;
            r && r(e.lookup(v.fragment).data, 0 !== m.length ? m : null);
          },
          error: h
        }).unsubscribe
      };
    };
  }, function (e, t, r) {
    "use strict";

    r(2)(r(4)), r(3);

    e.exports = function () {};
  }, function (e, t, r) {
    "use strict";

    var n = r(75);
    r(3);

    e.exports = function (e, t, r, i, o) {
      return new n(e, r, i, o);
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(2),
        i = n(r(4)),
        o = n(r(16)),
        a = r(18),
        s = r(0),
        u = r(47),
        c = r(12).createRequestDescriptor,
        l = r(9),
        d = l.areEqualSelectors,
        f = l.createReaderSelector,
        h = l.getSelectorsFromObject,
        p = function () {
      function e(e, t, r, n) {
        var i = this;
        (0, o.default)(this, "_onChange", function () {
          i._stale = !0, "function" == typeof i._callback && i._callback();
        }), this._callback = n, this._context = e, this._data = {}, this._fragments = t, this._props = r, this._resolvers = {}, this._stale = !1, this.setProps(r);
      }

      var t = e.prototype;
      return t.dispose = function () {
        for (var e in this._resolvers) this._resolvers.hasOwnProperty(e) && g(this._resolvers[e]);
      }, t.resolve = function () {
        if (this._stale) {
          var e,
              t = this._data;

          for (var r in this._resolvers) if (this._resolvers.hasOwnProperty(r)) {
            var n = this._resolvers[r],
                o = t[r];

            if (n) {
              var a = n.resolve();
              (e || a !== o) && ((e = e || (0, i.default)({}, t))[r] = a);
            } else {
              var s = this._props[r],
                  c = void 0 !== s ? s : null;
              !e && u(c, o) || ((e = e || (0, i.default)({}, t))[r] = c);
            }
          }

          this._data = e || t, this._stale = !1;
        }

        return this._data;
      }, t.setCallback = function (e) {
        this._callback = e;
      }, t.setProps = function (e) {
        var t = h(this._fragments, e);

        for (var r in t) if (t.hasOwnProperty(r)) {
          var n = t[r],
              i = this._resolvers[r];
          null == n ? (null != i && i.dispose(), i = null) : "PluralReaderSelector" === n.kind ? null == i ? i = new v(this._context.environment, n, this._onChange) : (i instanceof v || s(!1), i.setSelector(n)) : null == i ? i = new _(this._context.environment, n, this._onChange) : (i instanceof _ || s(!1), i.setSelector(n)), this._resolvers[r] = i;
        }

        this._props = e, this._stale = !0;
      }, t.setVariables = function (e, t) {
        for (var r in this._resolvers) if (this._resolvers.hasOwnProperty(r)) {
          var n = this._resolvers[r];
          n && n.setVariables(e, t);
        }

        this._stale = !0;
      }, e;
    }(),
        _ = function () {
      function e(e, t, r) {
        var n = this;
        (0, o.default)(this, "_onChange", function (e) {
          n._data = e.data, n._callback();
        });
        var i = e.lookup(t);
        this._callback = r, this._data = i.data, this._environment = e, this._selector = t, this._subscription = e.subscribe(i, this._onChange);
      }

      var t = e.prototype;
      return t.dispose = function () {
        this._subscription && (this._subscription.dispose(), this._subscription = null);
      }, t.resolve = function () {
        return this._data;
      }, t.setSelector = function (e) {
        if (null == this._subscription || !d(e, this._selector)) {
          this.dispose();

          var t = this._environment.lookup(e);

          this._data = t.data, this._selector = e, this._subscription = this._environment.subscribe(t, this._onChange);
        }
      }, t.setVariables = function (e, t) {
        if (!a(e, this._selector.variables)) {
          var r = c(t, e),
              n = f(this._selector.node, this._selector.dataID, e, r);
          this.setSelector(n);
        }
      }, e;
    }(),
        v = function () {
      function e(e, t, r) {
        var n = this;
        (0, o.default)(this, "_onChange", function (e) {
          n._stale = !0, n._callback();
        }), this._callback = r, this._data = [], this._environment = e, this._resolvers = [], this._stale = !0, this.setSelector(t);
      }

      var t = e.prototype;
      return t.dispose = function () {
        this._resolvers.forEach(g);
      }, t.resolve = function () {
        if (this._stale) {
          for (var e, t = this._data, r = 0; r < this._resolvers.length; r++) {
            var n = t[r],
                i = this._resolvers[r].resolve();

            (e || i !== n) && (e = e || t.slice(0, r)).push(i);
          }

          e || this._resolvers.length === t.length || (e = t.slice(0, this._resolvers.length)), this._data = e || t, this._stale = !1;
        }

        return this._data;
      }, t.setSelector = function (e) {
        for (var t = e.selectors; this._resolvers.length > t.length;) {
          this._resolvers.pop().dispose();
        }

        for (var r = 0; r < t.length; r++) r < this._resolvers.length ? this._resolvers[r].setSelector(t[r]) : this._resolvers[r] = new _(this._environment, t[r], this._onChange);

        this._stale = !0;
      }, t.setVariables = function (e, t) {
        this._resolvers.forEach(function (r) {
          return r.setVariables(e, t);
        }), this._stale = !0;
      }, e;
    }();

    function g(e) {
      e && e.dispose();
    }

    e.exports = p;
  }, function (e, t, r) {
    "use strict";

    var n,
        i,
        o = r(0);

    e.exports = function (e) {
      return n || (n = e.createContext(null), i = e), e !== i && o(!1), n;
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(46),
        i = n.convertFetch,
        o = n.convertSubscribe;

    function a(e, t, r) {
      return function (n, i, o, a) {
        var s;

        function u(e, t, a) {
          r && s.addLog("GraphiQL", r(n, i)), s.addLog("Cache Config", o), s.addLog("Variables", JSON.stringify(i, null, 2)), a && s.addLog("Status", a), e && s.addLog("Error", e), t && s.addLog("Response", t);
        }

        function c(e, t, r) {
          u(e, t, r), s.flushLogs(e, t, r);
        }

        function l(e, t, r) {
          u(e, t, r), s.commitLogs(e, t, r);
        }

        var d = e(n, i, o, a),
            f = "subscription" === n.operationKind;
        return d.do({
          start: function () {
            (s = new t({
              request: n,
              variables: i,
              cacheConfig: o,
              uploadables: a
            })).timerStart(), f && c(null, null, "subscription is sent.");
          },
          next: function (e) {
            c(null, e), s.timerStart();
          },
          error: function (e) {
            return l(e, null, null);
          },
          complete: function () {
            f ? l(null, null, "subscription was closed.") : s.markCommitted();
          },
          unsubscribe: function () {
            return l(null, null, f ? "subscription is unsubscribed." : "execution is unsubscribed.");
          }
        });
      };
    }

    e.exports = function (e) {
      return {
        wrapFetch: function (t, r) {
          return function (n, o, s, u) {
            return a(i(t), e, r)(n, o, s, u);
          };
        },
        wrapSubscribe: function (t, r) {
          return function (n, i, s) {
            return a(o(t), e, r)(n, i, s);
          };
        }
      };
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(12).createOperationDescriptor,
        i = r(15).getRequest;

    e.exports = function (e, t, r, o) {
      var a = i(t);
      if ("query" !== a.params.operationKind) throw new Error("fetchQuery: Expected query operation");
      var s = n(a, r);
      return e.execute({
        operation: s,
        cacheConfig: o
      }).map(function () {
        return e.lookup(s.fragment).data;
      }).toPromise();
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(11),
        i = r(80),
        o = r(0),
        a = new Map();

    function s(e, t, r) {
      return n.create(function (n) {
        var a = c(e),
            s = t.identifier,
            d = a.get(s);
        return d || r().finally(function () {
          return a.delete(s);
        }).subscribe({
          start: function (e) {
            d = {
              identifier: s,
              subject: new i(),
              subscription: e
            }, a.set(s, d);
          },
          next: function (e) {
            l(a, s).subject.next(e);
          },
          error: function (e) {
            l(a, s).subject.error(e);
          },
          complete: function () {
            l(a, s).subject.complete();
          }
        }), null == d && o(!1), u(a, d).subscribe(n);
      });
    }

    function u(e, t) {
      return n.create(function (r) {
        var n = t.subject.subscribe(r);
        return function () {
          n.unsubscribe();
          var r = e.get(t.identifier);

          if (r) {
            var i = r.subscription;
            null != i && 0 === r.subject.getObserverCount() && (i.unsubscribe(), e.delete(t.identifier));
          }
        };
      });
    }

    function c(e) {
      var t = a.get(e);
      if (null != t) return t;
      var r = new Map();
      return a.set(e, r), r;
    }

    function l(e, t) {
      var r = e.get(t);
      return null == r && o(!1), r;
    }

    e.exports = {
      fetchQuery: function (e, t, r) {
        return s(e, t.request, function () {
          return e.execute({
            operation: t,
            cacheConfig: null == r ? void 0 : r.networkCacheConfig
          });
        });
      },
      fetchQueryDeduped: s,
      getPromiseForRequestInFlight: function (e, t) {
        var r = c(e),
            n = r.get(t.identifier);
        return n ? new Promise(function (e, t) {
          var i = !1;
          u(r, n).subscribe({
            complete: e,
            error: t,
            next: function (t) {
              i && e(t);
            }
          }), i = !0;
        }) : null;
      },
      getObservableForRequestInFlight: function (e, t) {
        var r = c(e),
            n = r.get(t.identifier);
        return n ? u(r, n) : null;
      },
      hasRequestInFlight: function (e, t) {
        return c(e).has(t.identifier);
      }
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(2)(r(16)),
        i = r(11),
        o = r(0),
        a = function () {
      function e() {
        var e = this;
        (0, n.default)(this, "_complete", !1), (0, n.default)(this, "_events", []), (0, n.default)(this, "_sinks", new Set()), this._observable = i.create(function (t) {
          e._sinks.add(t);

          for (var r = e._events, n = 0; n < r.length && !t.closed; n++) {
            var i = r[n];

            switch (i.kind) {
              case "complete":
                t.complete();
                break;

              case "error":
                t.error(i.error);
                break;

              case "next":
                t.next(i.data);
                break;

              default:
                i.kind, o(!1);
            }
          }

          return function () {
            e._sinks.delete(t);
          };
        });
      }

      var t = e.prototype;
      return t.complete = function () {
        !0 !== this._complete && (this._complete = !0, this._events.push({
          kind: "complete"
        }), this._sinks.forEach(function (e) {
          return e.complete();
        }));
      }, t.error = function (e) {
        !0 !== this._complete && (this._complete = !0, this._events.push({
          kind: "error",
          error: e
        }), this._sinks.forEach(function (t) {
          return t.error(e);
        }));
      }, t.next = function (e) {
        !0 !== this._complete && (this._events.push({
          kind: "next",
          data: e
        }), this._sinks.forEach(function (t) {
          return t.next(e);
        }));
      }, t.subscribe = function (e) {
        return this._observable.subscribe(e);
      }, t.getObserverCount = function () {
        return this._sinks.size;
      }, e;
    }();

    e.exports = a;
  }, function (e, t, r) {
    "use strict";

    var n = r(48),
        i = r(44),
        o = r(8);

    e.exports = function (e, t) {
      return JSON.stringify(o(i(e, function (e, r) {
        var i = t[r];
        return n(e, i);
      })));
    };
  }, function (e, t, r) {
    "use strict";

    var n = r(17),
        i = (r(3), r(15).getRequest),
        o = r(12).createOperationDescriptor;

    e.exports = function (e, t) {
      var r = i(t.subscription);
      if ("subscription" !== r.params.operationKind) throw new Error("requestSubscription: Must use Subscription operation");
      var a = t.configs,
          s = t.onCompleted,
          u = t.onError,
          c = t.onNext,
          l = t.variables,
          d = o(r, l),
          f = (a ? n.convert(a, r, null, t.updater) : t).updater;
      return e.execute({
        operation: d,
        updater: f,
        cacheConfig: {
          force: !0
        }
      }).map(function () {
        return e.lookup(d.fragment).data;
      }).subscribeLegacy({
        onNext: c,
        onError: u,
        onCompleted: s
      });
    };
  }]);
});